%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G1114) Quartz PS Context)
%%Title: (\344\275\277\347\224\250\345\233\263)
%%Creator: (PowerPoint: cgpdftops CUPS filter)
%%CreationDate: (Monday, December 25 2017 04:17:12 JST)
%%For: (\346\265\205\344\272\225\351\207\214\345\245\210)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(\344\275\277\347\224\250\345\233\263)def
/Creator(PowerPoint: cgpdftops CUPS filter)def
/CreationDate(Monday, December 25 2017 04:17:12 JST)def
/For(\346\265\205\344\272\225\351\207\214\345\245\210)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *BindEdge Left
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNAdvancedSmoothing None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNBrightness 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNCADMode False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorHalftone pattern3
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorMode color
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorSyncICC DefaultFile
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorantDensity 9
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNContrast 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNDuplex None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNDuplexFixMode False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGamma 1.4
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGradation High1
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGradationSmoothing Off
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGraphicsMode VectorMode
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNHalftone pattern3
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNHardDisk False
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNImageCompression None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNImageSpecialProcess None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotAMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotBMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotCMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotDMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotManMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNJobExecMode print
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNKeepGray Standard
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNLastPagePrintMode None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNLineControl None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMatchingMethod Photographic
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMatchingMode Driver
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMonitorProfile sRGBv1.31(Canon)
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNOptionStaple False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNPrintOtherSide False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNProcessColorMode False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNRotatePrint False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNShiftStartPrintPosition False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSpecialFineLineProcess False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSrcOption None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNStaple False
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTonerSaving False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTypeWing True
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNUseColorantDensity None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNXColorAdjustment 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNYColorAdjustment 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Collate True
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *InputSlot Auto
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize A4
<</PageSize[595 842]/ImagingBBox null/MarginMode 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Resolution 600
<</HWResolution[600 600]>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *StapleLocation TopLeft
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 595 842
%%BeginPageSetup
595.0 0.0 translate 90 rotate
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: THUZZE+YuGothic-Regular
%!FontType1-1.0: THUZZE+YuGothic-Regular 1.0000.1.6200
14 dict begin/FontName /THUZZE+YuGothic-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid5 put
dup 34 /gid3 put
dup 35 /gid4 put
dup 36 /gid1 put
dup 37 /gid7 put
dup 38 /gid6 put
dup 39 /gid8 put
dup 40 /gid2 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -840 1 index div -619 2 index div 2378 3 index div 2642 5 -1 roll div]cvx def
/sfnts [<





022560113F7C6B88FEE1A798CAA6F6D18E77048B270144C1B0FEDFFEB5B195B18AD773FD1FFE90483FE5CF0150017FD8B27C680000010060002D04A706020007001240090408020706406C0702003F2B323F3031011521112311213504A7FE1F87FE21060275FAA005607500000200A4FF88076F069E0046006D00A0406C29087B080108120F49081A0D0E483E0801081E0B4908013022171610496D1701171A0E49171E0D493F170117220B4917106D556D557D5502551A0E494E550104551E0C4955220B49556130106161103003384E4C4A7E42010542160F494D425D42023E420104421E0B494238002F332B5F5D5D2B5F5D2F33331217392F2F2F11332B2B5F5D2B5D113311332B5D2B2B5D2B331133332B5D2B2B5D11333031012105223535343305213427161736372105223535343305213237363332171615140706070607061515212532151514232521151314070623222722272627262716333237363503353427161716151407061515212532150715171423232235112111142323223537352734330503D7FDEEFEED0E0E011302120E2B37C68CFD83FEF00F0F0110027329100D080E212B17153897E702021701120F0FFEEEFDE902272C9B2433180604070D166C67391211190E333A160C0A01E1011F0E04040E460EFA680E460E04040E012101FC040E4210049B3A07107486040E400E040806212B121209062B7C851137270410420E04A2FEC34F222401070418291F0C12112E056F1F9B3C0308030D081D197E1F040E614DD90F0F013DFEC30F0FD9416D0E04000002006FFF90079006920037004000474028342A203C08177B17016C170117160E494D17013E170104171E0B491738012A3C261E1E0C2E26100C002F332F3312392F1239393333332B5F5D5D2B5D5D11331133113330310123052235353433052135342716171615140706151521253215151423252302010005060706232227240100050623222726272401262726131617161736373637020D52FEEF0E0E0111020C104B25170C0B022B01130E0EFEED6E86FEE8014A0200191A10090613FE01FED2FECAFE1116050B0D191E0214013297635F134163638697654E3504BF040E480E049AA03D0406040D081D19849A040E480E04FE12FEE6FEE2AB162E1A08CA0111FEE9BA07162B10B801159DB7AC0106DDB4B08497C89EC800030071FF8A0730067300470068007D008D405E777E4A01055C4A6C4A024D4A014A1A0C494A1E0B494A631D121610495D126D1202121E0D493F120112240B49123A071210495D076D07024E070104071E0C4907220B4907000E7F3A01203A01633A0E0E3A6303256955534F510151272325002F33332F5D3333331217392F2F2F5D5D1133332B2B5F5D5D2B11332B5D2B5D2B3311332B2B5D5D5F5D333031010522353534330521

1F3130721F302F361F2A29CD1F2726341F26241B195C251B1F1F241A0C1F23041A195C2219111F2119FF1F202518165C1F18931F1E0317165C1D16FF1F1C161B1F1B3219275B183616375B1A3219275B173616375B15193C16815A1340125511FF105512881088200D2331460D220C55B8FFE0400905233146052204550CB80138B4FF890C8804B80130400DFF890488200B2931460B280A55B8FFE0400907293146072806550EB8013AB4FF890E880AB80136B4FF890A8806B80132B43289068800B8012C400DFF890088200923314609220855B8FFE04009032331460322025508B80134B4FF89088802B8012EB3FF890288410F0138008801300088013A00880136008801320088012C008801340088012EB5880340400501B9019000542B4BB807FF524BB008505BB00188B02553B00188B040515AB00688B000555A5B58B101018E59858D8D001D424BB0905358B20300001D4259B10202435158B104038E59002B002B002B002B002B002B002B002B002B2B002B2B2B2B2B2B002B2B002B2B002B2B002B2B2B2B2B2B002B2B002B2B2B2B2B2B002B002B2B2B012B012B012B012B012B012B2B002B002B012B012B2B002B002B2B012B2B012B2B2B2B002B2B2B012B2B2B2B2B002B2B2B2B2B2B2B012B2B2B2B2B2B002B2B2B2B2B2B2B2B2B2B2B2B2B012B2B2B2B2B002B2B2B2B2B2B2B2B2B012B2B2B2B2B2B2B002B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B7374752B2B2B2B2B732B012B0075737374752B2B2B012B2B002B2B2B2B012B002B2B2B2B2B012B002B180000
00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-840 -619 2378 2642}def
/UniqueID 4360755 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C99D7B912F94734180BCB0A2B426ACDB993C61FD2485EFF51D552B79A96C26F047FF6D49CCBA19A913CE8E83C6FEDEECBE2299588F59EF520390E7CDBCE7B50AA73065A23F5ABBA8D10E0CE66E9EB274862089D13FB347AD7E369A9A3C4F638CBB1CD64F81BAD1A2CE41B220C1874290DF274D4C2F327665B208245FF71C35E126AD22B600DBCB270D7A18330B1967C941417DF7B57B0372865D0BDB845CAE7D752F87A2CB4A59D01C25EF83E58E9593F3D5F2BFB278CA46D624CBFD0B2E852BAAF902664CCE0895C9E0821CBCB959465465627C491196E5114ECE6C2227EBE2FC4155EA06A29AB04CD52FC63EA2CB3224227F7DFADD7E73A52DCCC474A7C66B28FE335CE5840538878E63ED0F1FD0F1FB3E738F7FA3105FA67A62D087406081D0DE29CB7ECFB3918C755FBF6857438C37406A226FF803F9C91D8F19209AC4C1DD8539F9BD067F09F643F1294D931245AB4E16953D770DC8EC9F9374C4BA46AE939427AB911D6FAAAD12C26259B50341E500C15F6BEC1F62393F4DAB5166E01618DE9629959C5581F1DEDA82959E2BEB9A46FB875F9E26B256C9BF745B9D987231C2C8B590045B32FF8B220F5B60873A7153B0C3F0D4D079B5C54ADE022702BE0D7F4DD1E5A7E4FC59EF117E06AFB69A2F946FAB510CAD8C5B2FB367D4B77CFCCD0891E53A8D8555C3746C693B52AD0F2FA055F3AF5672A3A694DD44B2068FFDDC336B114E03915E272A42CA5E93ADDE18AC226F82CD0FC71CC7091062D6711B5C8


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/THUZZE+YuGothic-Regular cguidfix
/F1.1/THUZZE+YuGothic-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
14 68.999992 814 458 rc
14 68.999992 m
828 68.999992 l
828 527 l
14 527 l
h
f
12700 w
1 j
0 0 0 sc
0.00006677 0 0 -0.00006678 219.5645 478.93829 cm
900000 -6350 m
900000 5406350 l
S
1800000 -6350 m
1800000 5406350 l
S
2700000 -6350 m
2700000 5406350 l
S
3600000 -6350 m
3600000 5406350 l
S
4500000 -6350 m
4500000 5406350 l
S
-6350 900000 m
5406350 900000 l
S
-6350 1800000 m
5406350 1800000 l
S
-6350 2700000 m
5406350 2700000 l
S
-6350 3600000 m
5406350 3600000 l
S
-6350 4500000 m
5406350 4500000 l
S
0 -6350 m
0 5406350 l
S
5400000 -6350 m
5400000 5406350 l
S
-6350 0 m
5406350 0 l
S
-6350 5400000 m
5406350 5400000 l
S
0.33333331 0 0 0.3334243 274.92239 485.8735 cm
/F1.1[ 46 0 0 46 0 0]sf
0 0 m
(!)s
0.33333331 0 0 0.3334243 334.83499 485.8735 cm
0 0 m
(")s
0.33333331 0 0 0.3334243 395.4967 485.8735 cm
0 0 m
(#)s
0.33333331 0 0 0.3334243 456.90759 485.8735 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 517.0343 485.8735 cm
0 0 m
(!)s
0.33333331 0 0 0.3334243 202.1026 412.95261 cm
0 0 m
(#)s
0.33333331 0 0 0.3334243 202.85181 352.36771 cm
0 0 m
(!)s
0.33333331 0 0 0.3334243 202.8519 291.78281 cm
0 0 m
(")s
0.33333331 0 0 0.3334243 203.3869 231.1978 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 203.3869 170.6129 cm
0 0 m
(")s
0.65098041 0.65098041 0.65098041 sc
CM
243.033 448.73999 m
243.033 452.4873 246.07001 455.52509 249.81641 455.52509 c
253.5627 455.52509 256.5997 452.4873 256.5997 448.73999 c
256.5997 444.99261 253.5627 441.9548 249.81641 441.9548 c
246.07001 441.9548 243.033 444.99261 243.033 448.73999 c
h
f
19050 w
0 j
8 M
0 0 0 sc
0.00006677 0 0 -0.00006678 243.033 455.52509 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
243.033 388.49811 m
243.033 392.24551 246.07001 395.28329 249.81641 395.28329 c
253.5627 395.28329 256.5997 392.24551 256.5997 388.49811 c
256.5997 384.75079 253.5627 381.71289 249.81641 381.71289 c
246.07001 381.71289 243.033 384.75079 243.033 388.49811 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 243.033 395.28329 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
243.033 328.25629 m
243.033 332.00369 246.07001 335.0415 249.81641 335.0415 c
253.5627 335.0415 256.5997 332.00369 256.5997 328.25629 c
256.5997 324.509 253.5627 321.4711 249.81641 321.4711 c
246.07001 321.4711 243.033 324.509 243.033 328.25629 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 243.033 335.0415 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
243.033 268.0145 m
243.033 271.76181 246.07001 274.79971 249.81641 274.79971 c
253.5627 274.79971 256.5997 271.76181 256.5997 268.0145 c
256.5997 264.26709 253.5627 261.22931 249.81641 261.22931 c
246.07001 261.22931 243.033 264.26709 243.033 268.0145 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 243.033 274.79971 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
243.033 207.7726 m
243.033 211.52 246.07001 214.5578 249.81641 214.5578 c
253.5627 214.5578 256.5997 211.52 256.5997 207.7726 c
256.5997 204.0253 253.5627 200.9875 249.81641 200.9875 c
246.07001 200.9875 243.033 204.0253 243.033 207.7726 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 243.033 214.5578 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
243.033 147.53081 m
243.033 151.2782 246.07001 154.31599 249.81641 154.31599 c
253.5627 154.31599 256.5997 151.2782 256.5997 147.53081 c
256.5997 143.78349 253.5627 140.7457 249.81641 140.7457 c
246.07001 140.7457 243.033 143.78349 243.033 147.53081 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 243.033 154.31599 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
303.4845 448.73999 m
303.4845 452.4873 306.52151 455.52509 310.26779 455.52509 c
314.01419 455.52509 317.05121 452.4873 317.05121 448.73999 c
317.05121 444.99261 314.01419 441.9548 310.26779 441.9548 c
306.52151 441.9548 303.4845 444.99261 303.4845 448.73999 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 303.4845 455.52509 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
303.4845 388.49811 m
303.4845 392.24551 306.52151 395.28329 310.26779 395.28329 c
314.01419 395.28329 317.05121 392.24551 317.05121 388.49811 c
317.05121 384.75079 314.01419 381.71289 310.26779 381.71289 c
306.52151 381.71289 303.4845 384.75079 303.4845 388.49811 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 303.4845 395.28329 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
363.936 448.73999 m
363.936 452.4873 366.97299 455.52509 370.7193 455.52509 c
374.46561 455.52509 377.50259 452.4873 377.50259 448.73999 c
377.50259 444.99261 374.46561 441.9548 370.7193 441.9548 c
366.97299 441.9548 363.936 444.99261 363.936 448.73999 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 363.936 455.52509 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
363.936 388.49811 m
363.936 392.24551 366.97299 395.28329 370.7193 395.28329 c
374.46561 395.28329 377.50259 392.24551 377.50259 388.49811 c
377.50259 384.75079 374.46561 381.71289 370.7193 381.71289 c
366.97299 381.71289 363.936 384.75079 363.936 388.49811 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 363.936 395.28329 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
303.4845 328.25629 m
303.4845 332.00369 306.52151 335.0415 310.26779 335.0415 c
314.01419 335.0415 317.05121 332.00369 317.05121 328.25629 c
317.05121 324.509 314.01419 321.4711 310.26779 321.4711 c
306.52151 321.4711 303.4845 324.509 303.4845 328.25629 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 303.4845 335.0415 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
363.936 328.25629 m
363.936 332.00369 366.97299 335.0415 370.7193 335.0415 c
374.46561 335.0415 377.50259 332.00369 377.50259 328.25629 c
377.50259 324.509 374.46561 321.4711 370.7193 321.4711 c
366.97299 321.4711 363.936 324.509 363.936 328.25629 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 363.936 335.0415 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
303.4845 268.0145 m
303.4845 271.76181 306.52151 274.79971 310.26779 274.79971 c
314.01419 274.79971 317.05121 271.76181 317.05121 268.0145 c
317.05121 264.26709 314.01419 261.22931 310.26779 261.22931 c
306.52151 261.22931 303.4845 264.26709 303.4845 268.0145 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 303.4845 274.79971 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
363.936 268.0145 m
363.936 271.76181 366.97299 274.79971 370.7193 274.79971 c
374.46561 274.79971 377.50259 271.76181 377.50259 268.0145 c
377.50259 264.26709 374.46561 261.22931 370.7193 261.22931 c
366.97299 261.22931 363.936 264.26709 363.936 268.0145 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 363.936 274.79971 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
303.4845 207.7726 m
303.4845 211.52 306.52151 214.5578 310.26779 214.5578 c
314.01419 214.5578 317.05121 211.52 317.05121 207.7726 c
317.05121 204.0253 314.01419 200.9875 310.26779 200.9875 c
306.52151 200.9875 303.4845 204.0253 303.4845 207.7726 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 303.4845 214.5578 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
363.936 207.7726 m
363.936 211.52 366.97299 214.5578 370.7193 214.5578 c
374.46561 214.5578 377.50259 211.52 377.50259 207.7726 c
377.50259 204.0253 374.46561 200.9875 370.7193 200.9875 c
366.97299 200.9875 363.936 204.0253 363.936 207.7726 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 363.936 214.5578 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
303.4845 147.53081 m
303.4845 151.2782 306.52151 154.31599 310.26779 154.31599 c
314.01419 154.31599 317.05121 151.2782 317.05121 147.53081 c
317.05121 143.78349 314.01419 140.7457 310.26779 140.7457 c
306.52151 140.7457 303.4845 143.78349 303.4845 147.53081 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 303.4845 154.31599 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
363.936 147.45151 m
363.936 151.1989 366.97299 154.23669 370.7193 154.23669 c
374.46561 154.23669 377.50259 151.1989 377.50259 147.45151 c
377.50259 143.7041 374.46561 140.66631 370.7193 140.66631 c
366.97299 140.66631 363.936 143.7041 363.936 147.45151 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 363.936 154.23669 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
424.38739 448.73999 m
424.38739 452.4873 427.42441 455.52509 431.17068 455.52509 c
434.91711 455.52509 437.9541 452.4873 437.9541 448.73999 c
437.9541 444.99261 434.91711 441.9548 431.17068 441.9548 c
427.42441 441.9548 424.38739 444.99261 424.38739 448.73999 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 424.38739 455.52509 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
484.83881 448.73999 m
484.83881 452.4873 487.87579 455.52509 491.62219 455.52509 c
495.3685 455.52509 498.40549 452.4873 498.40549 448.73999 c
498.40549 444.99261 495.3685 441.9548 491.62219 441.9548 c
487.87579 441.9548 484.83881 444.99261 484.83881 448.73999 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 484.83881 455.52509 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
545.29028 448.73999 m
545.29028 452.4873 548.32727 455.52509 552.07361 455.52509 c
555.81989 455.52509 558.85699 452.4873 558.85699 448.73999 c
558.85699 444.99261 555.81989 441.9548 552.07361 441.9548 c
548.32727 441.9548 545.29028 444.99261 545.29028 448.73999 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 545.29028 455.52509 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
424.38739 388.49811 m
424.38739 392.24551 427.42441 395.28329 431.17068 395.28329 c
434.91711 395.28329 437.9541 392.24551 437.9541 388.49811 c
437.9541 384.75079 434.91711 381.71289 431.17068 381.71289 c
427.42441 381.71289 424.38739 384.75079 424.38739 388.49811 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 424.38739 395.28329 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
484.83881 388.49811 m
484.83881 392.24551 487.87579 395.28329 491.62219 395.28329 c
495.3685 395.28329 498.40549 392.24551 498.40549 388.49811 c
498.40549 384.75079 495.3685 381.71289 491.62219 381.71289 c
487.87579 381.71289 484.83881 384.75079 484.83881 388.49811 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 484.83881 395.28329 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
545.29028 388.49811 m
545.29028 392.24551 548.32727 395.28329 552.07361 395.28329 c
555.81989 395.28329 558.85699 392.24551 558.85699 388.49811 c
558.85699 384.75079 555.81989 381.71289 552.07361 381.71289 c
548.32727 381.71289 545.29028 384.75079 545.29028 388.49811 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 545.29028 395.28329 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
424.38739 328.25629 m
424.38739 332.00369 427.42441 335.0415 431.17068 335.0415 c
434.91711 335.0415 437.9541 332.00369 437.9541 328.25629 c
437.9541 324.509 434.91711 321.4711 431.17068 321.4711 c
427.42441 321.4711 424.38739 324.509 424.38739 328.25629 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 424.38739 335.0415 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
484.83881 328.25629 m
484.83881 332.00369 487.87579 335.0415 491.62219 335.0415 c
495.3685 335.0415 498.40549 332.00369 498.40549 328.25629 c
498.40549 324.509 495.3685 321.4711 491.62219 321.4711 c
487.87579 321.4711 484.83881 324.509 484.83881 328.25629 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 484.83881 335.0415 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
545.29028 328.25629 m
545.29028 332.00369 548.32727 335.0415 552.07361 335.0415 c
555.81989 335.0415 558.85699 332.00369 558.85699 328.25629 c
558.85699 324.509 555.81989 321.4711 552.07361 321.4711 c
548.32727 321.4711 545.29028 324.509 545.29028 328.25629 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 545.29028 335.0415 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
424.38739 268.0145 m
424.38739 271.76181 427.42441 274.79971 431.17068 274.79971 c
434.91711 274.79971 437.9541 271.76181 437.9541 268.0145 c
437.9541 264.26709 434.91711 261.22931 431.17068 261.22931 c
427.42441 261.22931 424.38739 264.26709 424.38739 268.0145 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 424.38739 274.79971 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
484.83881 268.0145 m
484.83881 271.76181 487.87579 274.79971 491.62219 274.79971 c
495.3685 274.79971 498.40549 271.76181 498.40549 268.0145 c
498.40549 264.26709 495.3685 261.22931 491.62219 261.22931 c
487.87579 261.22931 484.83881 264.26709 484.83881 268.0145 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 484.83881 274.79971 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
545.29028 268.0145 m
545.29028 271.76181 548.32727 274.79971 552.07361 274.79971 c
555.81989 274.79971 558.85699 271.76181 558.85699 268.0145 c
558.85699 264.26709 555.81989 261.22931 552.07361 261.22931 c
548.32727 261.22931 545.29028 264.26709 545.29028 268.0145 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 545.29028 274.79971 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
424.38739 207.7726 m
424.38739 211.52 427.42441 214.5578 431.17068 214.5578 c
434.91711 214.5578 437.9541 211.52 437.9541 207.7726 c
437.9541 204.0253 434.91711 200.9875 431.17068 200.9875 c
427.42441 200.9875 424.38739 204.0253 424.38739 207.7726 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 424.38739 214.5578 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
424.38739 147.53081 m
424.38739 151.2782 427.42441 154.31599 431.17068 154.31599 c
434.91711 154.31599 437.9541 151.2782 437.9541 147.53081 c
437.9541 143.78349 434.91711 140.7457 431.17068 140.7457 c
427.42441 140.7457 424.38739 143.78349 424.38739 147.53081 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 424.38739 154.31599 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
484.83881 207.7726 m
484.83881 211.52 487.87579 214.5578 491.62219 214.5578 c
495.3685 214.5578 498.40549 211.52 498.40549 207.7726 c
498.40549 204.0253 495.3685 200.9875 491.62219 200.9875 c
487.87579 200.9875 484.83881 204.0253 484.83881 207.7726 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 484.83881 214.5578 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
545.29028 207.7726 m
545.29028 211.52 548.32727 214.5578 552.07361 214.5578 c
555.81989 214.5578 558.85699 211.52 558.85699 207.7726 c
558.85699 204.0253 555.81989 200.9875 552.07361 200.9875 c
548.32727 200.9875 545.29028 204.0253 545.29028 207.7726 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 545.29028 214.5578 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
484.83881 147.53081 m
484.83881 151.2782 487.87579 154.31599 491.62219 154.31599 c
495.3685 154.31599 498.40549 151.2782 498.40549 147.53081 c
498.40549 143.78349 495.3685 140.7457 491.62219 140.7457 c
487.87579 140.7457 484.83881 143.78349 484.83881 147.53081 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 484.83881 154.31599 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.65098041 0.65098041 0.65098041 sc
CM
545.29028 147.53081 m
545.29028 151.2782 548.32727 154.31599 552.07361 154.31599 c
555.81989 154.31599 558.85699 151.2782 558.85699 147.53081 c
558.85699 143.78349 555.81989 140.7457 552.07361 140.7457 c
548.32727 140.7457 545.29028 143.78349 545.29028 147.53081 c
h
f
0 0 0 sc
0.00006677 0 0 -0.00006678 545.29028 154.31599 cm
0 101600 m
0 45487.871 45487.871 0 101600 0 c
157712.09 0 203200 45487.871 203200 101600 c
203200 157712.09 157712.09 203200 101600 203200 c
45487.871 203200 0 157712.09 0 101600 c
h
S
0.26666671 0.4470588 0.76862752 sc
CM
254.8481 444.17841 m
302.1011 397.12259 l
303.66061 398.68951 l
305.47131 393.29599 l
300.0712 395.0831 l
301.63071 396.64999 l
254.3777 443.70581 l
h
f
315.42401 383.9762 m
362.677 336.9205 l
364.23651 338.4874 l
366.04721 333.09381 l
360.64709 334.88101 l
362.2066 336.44791 l
314.95361 383.50369 l
h
f
375.8754 323.73441 m
423.12839 276.67859 l
424.6879 278.24551 l
426.4986 272.85199 l
421.09851 274.6391 l
422.65799 276.20609 l
375.40509 323.26181 l
h
f
0.015686279 0.1960784 1 sc
437.43771 264.569 m
480.1839 222.00121 l
482.87601 224.70599 l
486.9501 212.5705 l
474.7999 216.5916 l
477.49191 219.2964 l
434.7457 261.8642 l
h
f
0.26666671 0.4470588 0.76862752 sc
496.72672 203.21111 m
543.97961 156.1553 l
545.53918 157.7222 l
547.34991 152.3287 l
541.94983 154.1158 l
543.50928 155.68269 l
496.25629 202.73849 l
h
f
315.95959 445.22971 m
363.21249 398.17389 l
364.77209 399.74081 l
366.58279 394.34729 l
361.18271 396.1344 l
362.74219 397.70139 l
315.4892 444.75711 l
h
f
377.07111 444.1785 m
424.32401 397.12271 l
425.88361 398.68961 l
427.69431 393.29599 l
422.29419 395.08319 l
423.8537 396.65009 l
376.60071 443.7059 l
h
f
436.32681 444.1785 m
483.5798 397.12271 l
485.13931 398.68961 l
486.95001 393.29599 l
481.5499 395.08319 l
483.10941 396.65009 l
435.85651 443.7059 l
h
f
496.8916 445.22971 m
544.14459 398.17389 l
545.7041 399.74081 l
547.51477 394.34729 l
542.11469 396.1344 l
543.67419 397.70139 l
496.4212 444.75711 l
h
f
376.14081 384.91049 m
423.3938 337.8548 l
424.95331 339.42169 l
426.76401 334.02811 l
421.36389 335.81531 l
422.9234 337.3822 l
375.6705 384.43799 l
h
f
436.32681 383.97629 m
483.5798 336.9205 l
485.13931 338.4874 l
486.95001 333.0939 l
481.5499 334.88101 l
483.10941 336.448 l
435.85651 383.50369 l
h
f
496.51279 384.05179 m
543.76581 336.99609 l
545.32532 338.56299 l
547.13599 333.1694 l
541.7359 334.9566 l
543.29541 336.5235 l
496.04251 383.57932 l
h
f
436.43491 324.18271 m
483.6879 277.12701 l
485.24741 278.69391 l
487.05811 273.30029 l
481.65799 275.08749 l
483.2175 276.65439 l
435.9646 323.71011 l
h
f
497.63031 323.7345 m
544.8833 276.67871 l
546.44281 278.24561 l
548.25348 272.85211 l
542.85339 274.63919 l
544.4129 276.20609 l
497.16 323.2619 l
h
f
497.63031 263.5285 m
544.8833 216.4727 l
546.44281 218.0396 l
548.25348 212.646 l
542.85339 214.4332 l
544.4129 216.00011 l
497.16 263.05591 l
h
f
0.015686279 0.1960784 1 sc
254.26781 383.09311 m
297.01401 340.5253 l
299.70609 343.2301 l
303.78021 331.0946 l
291.63 335.11569 l
294.32199 337.8205 l
251.57581 380.38831 l
h
f
316.4104 323.91241 m
359.15659 281.3446 l
361.8486 284.04941 l
365.9227 271.91391 l
353.77249 275.935 l
356.4646 278.6398 l
313.71841 321.20761 l
h
f
0.26666671 0.4470588 0.76862752 sc
254.8481 323.7345 m
302.1011 276.6788 l
303.66061 278.2457 l
305.47131 272.85211 l
300.0712 274.63931 l
301.63071 276.20621 l
254.3777 323.26199 l
h
f
375.8754 263.5285 m
423.12839 216.4727 l
424.6879 218.0396 l
426.4986 212.646 l
421.09851 214.4332 l
422.65799 216.00011 l
375.40509 263.05591 l
h
f
436.20239 202.3127 m
483.45541 155.2569 l
485.01489 156.82381 l
486.82559 151.43021 l
481.42551 153.21741 l
482.98499 154.7843 l
435.73209 201.8401 l
h
f
374.21649 203.32249 m
421.46939 156.26669 l
423.0289 157.8336 l
424.83969 152.44009 l
419.43961 154.2272 l
420.99911 155.7941 l
373.74609 202.8499 l
h
f
313.87579 262.79941 m
361.12869 215.7437 l
362.68829 217.31059 l
364.49899 211.91701 l
359.09891 213.70419 l
360.65839 215.2711 l
313.4054 262.3269 l
h
f
254.8481 262.79941 m
302.1011 215.7437 l
303.66061 217.31059 l
305.47131 211.91701 l
300.0712 213.70419 l
301.63071 215.2711 l
254.3777 262.3269 l
h
f
315.60049 201.88161 m
362.85349 154.8259 l
364.41299 156.39281 l
366.22369 150.99921 l
360.82361 152.78641 l
362.38309 154.3533 l
315.13019 201.4091 l
h
f
254.4986 202.8026 m
301.75159 155.7468 l
303.3111 157.31371 l
305.1218 151.9202 l
299.72171 153.70731 l
301.28131 155.2742 l
254.02831 202.33 l
h
f
0.015686279 0.1960784 1 sc
251.7242 441.9548 m
251.7242 406.73331 l
255.5399 406.73331 l
249.81641 395.28329 l
244.093 406.73331 l
247.9086 406.73331 l
247.9086 441.9548 l
h
f
0.26666671 0.4470588 0.76862752 sc
250.1497 380.69958 m
250.1498 339.117 l
252.3602 339.117 l
249.81641 334.02811 l
247.27271 339.117 l
249.48309 339.117 l
249.483 380.69958 l
h
f
249.39729 320.57269 m
249.3974 278.9902 l
251.6078 278.9902 l
249.0641 273.90131 l
246.52029 278.9902 l
248.7307 278.9902 l
248.7307 320.57269 l
h
f
250.1497 260.5759 m
250.1498 218.9933 l
252.3602 218.9933 l
249.81641 213.9044 l
247.27271 218.9933 l
249.48309 218.9933 l
249.483 260.5759 l
h
f
249.39729 200.0891 m
249.3974 158.5065 l
251.6078 158.5065 l
249.0641 153.4176 l
246.52029 158.5065 l
248.7307 158.5065 l
248.7307 200.0891 l
h
f
310.6012 441.9548 m
310.6012 400.37219 l
312.81161 400.37219 l
310.26791 395.28329 l
307.72409 400.37219 l
309.93451 400.37219 l
309.93451 441.9548 l
h
f
310.6012 380.69958 m
310.6012 339.117 l
312.81161 339.117 l
310.26791 334.02811 l
307.72409 339.117 l
309.93451 339.117 l
309.93451 380.69958 l
h
f
309.84879 320.57269 m
309.84879 278.9902 l
312.0593 278.9902 l
309.5155 273.90131 l
306.9718 278.9902 l
309.18219 278.9902 l
309.1821 320.57269 l
h
f
310.6012 260.5759 m
310.6012 218.9933 l
312.81161 218.9933 l
310.26791 213.9044 l
307.72409 218.9933 l
309.93451 218.9933 l
309.93451 260.5759 l
h
f
309.84879 200.0891 m
309.84879 158.5065 l
312.0593 158.5065 l
309.5155 153.4176 l
306.9718 158.5065 l
309.18219 158.5065 l
309.1821 200.0891 l
h
f
371.05261 443.0061 m
371.0527 401.42361 l
373.26309 401.42361 l
370.7193 396.33469 l
368.1756 401.42361 l
370.38599 401.42361 l
370.38589 443.0061 l
h
f
371.05261 381.75089 m
371.0527 340.1684 l
373.26309 340.1684 l
370.7193 335.0795 l
368.1756 340.1684 l
370.38599 340.1684 l
370.38589 381.75089 l
h
f
370.30029 321.62411 m
370.30029 280.0415 l
372.51071 280.0415 l
369.96701 274.9527 l
367.42319 280.0415 l
369.63361 280.0415 l
369.63361 321.62411 l
h
f
371.05261 261.6272 m
371.0527 220.04469 l
373.26309 220.04469 l
370.7193 214.9558 l
368.1756 220.04469 l
370.38599 220.04469 l
370.38589 261.6272 l
h
f
370.30029 201.1405 m
370.30029 159.55791 l
372.51071 159.55791 l
369.96701 154.46899 l
367.42319 159.55791 l
369.63361 159.55791 l
369.63361 201.1405 l
h
f
431.50409 441.9548 m
431.50409 400.37219 l
433.71451 400.37219 l
431.17081 395.28329 l
428.62701 400.37219 l
430.83749 400.37219 l
430.8374 441.9548 l
h
f
431.50409 380.69958 m
431.50409 339.117 l
433.71451 339.117 l
431.17081 334.02811 l
428.62701 339.117 l
430.83749 339.117 l
430.8374 380.69958 l
h
f
430.75171 320.57269 m
430.75171 278.9902 l
432.9621 278.9902 l
430.4184 273.90131 l
427.8746 278.9902 l
430.08511 278.9902 l
430.08499 320.57269 l
h
f
431.50409 260.5759 m
431.50409 218.9933 l
433.71451 218.9933 l
431.17081 213.9044 l
428.62701 218.9933 l
430.83749 218.9933 l
430.8374 260.5759 l
h
f
430.75171 200.0891 m
430.75171 158.5065 l
432.9621 158.5065 l
430.4184 153.4176 l
427.8746 158.5065 l
430.08511 158.5065 l
430.08499 200.0891 l
h
f
491.95551 441.9548 m
491.9556 400.37219 l
494.16599 400.37219 l
491.62231 395.28329 l
489.07849 400.37219 l
491.28891 400.37219 l
491.28891 441.9548 l
h
f
491.95551 380.69958 m
491.9556 339.117 l
494.16599 339.117 l
491.62231 334.02811 l
489.07849 339.117 l
491.28891 339.117 l
491.28891 380.69958 l
h
f
491.20309 320.57269 m
491.20319 278.9902 l
493.4136 278.9902 l
490.8699 273.90131 l
488.32611 278.9902 l
490.5365 278.9902 l
490.5365 320.57269 l
h
f
491.95551 260.5759 m
491.9556 218.9933 l
494.16599 218.9933 l
491.62231 213.9044 l
489.07849 218.9933 l
491.28891 218.9933 l
491.28891 260.5759 l
h
f
0.015686279 0.1960784 1 sc
492.77759 200.0891 m
492.77771 164.8676 l
496.59329 164.86771 l
490.8699 153.4176 l
485.14639 164.8676 l
488.96201 164.8676 l
488.96201 200.0891 l
h
f
1 0 0 sc
554.2265 441.9548 m
554.22662 406.73331 l
558.04218 406.73331 l
552.31879 395.28329 l
546.59528 406.73331 l
550.41101 406.73331 l
550.41089 441.9548 l
h
f
554.2265 380.69958 m
554.22662 345.47809 l
558.04218 345.47809 l
552.31879 334.02811 l
546.59528 345.47809 l
550.41101 345.47809 l
550.41089 380.69958 l
h
f
553.47418 320.57269 m
553.47418 285.35129 l
557.28992 285.35129 l
551.56641 273.90131 l
545.84302 285.35129 l
549.65863 285.35129 l
549.65863 320.57269 l
h
f
554.2265 260.5759 m
554.22662 225.3544 l
558.04218 225.3544 l
552.31879 213.9044 l
546.59528 225.3544 l
550.41101 225.3544 l
550.41089 260.5759 l
h
f
553.47418 200.0891 m
553.47418 164.8676 l
557.28992 164.86771 l
551.56641 153.4176 l
545.84302 164.8676 l
549.65863 164.8676 l
549.65863 200.0891 l
h
f
292.0376 454.4649 m
303.4845 448.7399 l
292.0376 443.01489 l
292.0376 446.8316 l
256.5997 446.8316 l
256.5997 450.64828 l
292.0376 450.64819 l
h
f
352.13431 454.4649 m
363.58121 448.7399 l
352.13431 443.01489 l
352.13431 446.8316 l
316.69641 446.8316 l
316.69641 450.64828 l
352.13431 450.64819 l
h
f
413.06491 454.4649 m
424.51181 448.7399 l
413.06491 443.01489 l
413.06491 446.8316 l
377.62701 446.8316 l
377.62701 450.64828 l
413.06491 450.64819 l
h
f
473.39191 454.4649 m
484.83881 448.7399 l
473.39191 443.01489 l
473.39191 446.8316 l
437.95401 446.8316 l
437.95401 450.64828 l
473.39191 450.64819 l
h
f
533.70227 454.4649 m
545.14911 448.7399 l
533.70227 443.01489 l
533.70227 446.8316 l
498.2644 446.8316 l
498.2644 450.64828 l
533.70227 450.64819 l
h
f
0.26666671 0.4470588 0.76862752 sc
298.397 391.04251 m
303.4845 388.49811 l
298.397 385.95361 l
298.397 388.16461 l
256.5997 388.1647 l
256.5997 388.83151 l
298.397 388.83151 l
h
f
358.49371 391.04251 m
363.58121 388.49811 l
358.49371 385.95361 l
358.49371 388.16461 l
316.69641 388.1647 l
316.69641 388.83151 l
358.49371 388.83151 l
h
f
419.42429 391.04251 m
424.51181 388.49811 l
419.42429 385.95361 l
419.42429 388.16461 l
377.62701 388.1647 l
377.62701 388.83151 l
419.42429 388.83151 l
h
f
479.75131 391.04251 m
484.83881 388.49811 l
479.75131 385.95361 l
479.75131 388.16461 l
437.95401 388.1647 l
437.95401 388.83151 l
479.75131 388.83151 l
h
f
540.06171 391.04251 m
545.14911 388.49811 l
540.06158 385.95361 l
540.06158 388.16461 l
498.2644 388.1647 l
498.2644 388.83151 l
540.06158 388.83151 l
h
f
297.6188 330.80069 m
302.7063 328.2562 l
297.6188 325.71179 l
297.6188 327.92279 l
255.82159 327.92291 l
255.82159 328.58969 l
297.6188 328.58969 l
h
f
357.71552 330.80069 m
362.80301 328.2562 l
357.71552 325.71179 l
357.71552 327.92279 l
315.91821 327.92291 l
315.91821 328.58969 l
357.71552 328.58969 l
h
f
418.64609 330.80069 m
423.73361 328.2562 l
418.64609 325.71179 l
418.64609 327.92279 l
376.84879 327.92291 l
376.84879 328.58969 l
418.64609 328.58969 l
h
f
478.97321 330.80069 m
484.06061 328.2562 l
478.97311 325.71179 l
478.97311 327.92279 l
437.1759 327.92291 l
437.1759 328.58969 l
478.97311 328.58969 l
h
f
539.28351 330.80069 m
544.37097 328.2562 l
539.28351 325.71179 l
539.28351 327.92279 l
497.48621 327.92291 l
497.48621 328.58969 l
539.28351 328.58969 l
h
f
299.31479 270.5589 m
304.40231 268.0144 l
299.31479 265.47 l
299.31479 267.681 l
257.51749 267.681 l
257.51749 268.3479 l
299.31479 268.34781 l
h
f
359.4115 270.5589 m
364.49899 268.0144 l
359.4115 265.47 l
359.4115 267.681 l
317.6142 267.681 l
317.6142 268.3479 l
359.4115 268.34781 l
h
f
0.015686279 0.1960784 1 sc
413.9827 273.73941 m
425.4296 268.0144 l
413.9827 262.2894 l
413.9827 266.10611 l
378.5448 266.10611 l
378.5448 269.92279 l
413.9827 269.92279 l
h
f
0.26666671 0.4470588 0.76862752 sc
480.6691 270.5589 m
485.75659 268.0144 l
480.6691 265.47 l
480.6691 267.681 l
438.8718 267.681 l
438.8718 268.3479 l
480.6691 268.34781 l
h
f
540.97949 270.5589 m
546.06702 268.0144 l
540.97949 265.47 l
540.97949 267.681 l
499.18219 267.681 l
499.18219 268.3479 l
540.97949 268.34781 l
h
f
298.397 210.317 m
303.4845 207.7726 l
298.397 205.2281 l
298.397 207.43919 l
256.5997 207.43919 l
256.5997 208.10609 l
298.397 208.106 l
h
f
358.49371 210.317 m
363.58121 207.7726 l
358.49371 205.2281 l
358.49371 207.43919 l
316.69641 207.43919 l
316.69641 208.10609 l
358.49371 208.106 l
h
f
419.42429 210.317 m
424.51181 207.7726 l
419.42429 205.2281 l
419.42429 207.43919 l
377.62701 207.43919 l
377.62701 208.10609 l
419.42429 208.106 l
h
f
479.75131 210.317 m
484.83881 207.7726 l
479.75131 205.2281 l
479.75131 207.43919 l
437.95401 207.43919 l
437.95401 208.10609 l
479.75131 208.106 l
h
f
540.06171 210.317 m
545.14911 207.7726 l
540.06158 205.2281 l
540.06158 207.43919 l
498.2644 207.43919 l
498.2644 208.10609 l
540.06158 208.106 l
h
f
298.39691 149.7516 m
303.48441 147.20711 l
298.39691 144.6627 l
298.39691 146.8737 l
256.5997 146.87379 l
256.5997 147.5406 l
298.39691 147.5405 l
h
f
358.49359 149.7516 m
363.58109 147.20711 l
358.49359 144.6627 l
358.49359 146.8737 l
316.69629 146.87379 l
316.69629 147.5406 l
358.49359 147.5405 l
h
f
419.42419 149.7516 m
424.51169 147.20711 l
419.42419 144.6627 l
419.42419 146.8737 l
377.62689 146.87379 l
377.62689 147.5406 l
419.42419 147.5405 l
h
f
479.75119 149.7516 m
484.83871 147.20711 l
479.75119 144.6627 l
479.75119 146.8737 l
437.95389 146.87379 l
437.95389 147.5406 l
479.75119 147.5405 l
h
f
0.015686279 0.1960784 1 sc
533.70221 152.9321 m
545.14911 147.20711 l
533.70221 141.4821 l
533.70221 145.2988 l
498.26431 145.2988 l
498.26431 149.11549 l
533.70221 149.11549 l
h
f
0 0 0 sc
0.33333331 0 0 0.3334243 371.25681 500.82669 cm
0 0 m
(%)s
0.33333331 0 0 0.3334243 386.50681 500.82669 cm
0 0 m
(&)s
0.33333331 0 0 0.3334243 401.75681 500.82669 cm
0 0 m
(')s
0.33333331 0 0 0.3334243 417.00681 500.82669 cm
0 0 m
($)s
0 0.33351541 -0.33324239 0 194.841 269.67621 cm
0 0 m
(%)s
0 0.33351541 -0.33324239 0 194.841 284.93451 cm
0 0 m
(&)s
0 0.33351541 -0.33324239 0 194.841 300.19281 cm
0 0 m
(')s
0 0.33351541 -0.33324239 0 194.841 315.45111 cm
0 0 m
(\()s
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 595 842
%%EOF

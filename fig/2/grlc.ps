%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G1114) Quartz PS Context)
%%Title: (\344\275\277\347\224\250\345\233\263)
%%Creator: (PowerPoint: cgpdftops CUPS filter)
%%CreationDate: (Wednesday, January 10 2018 17:40:18 JST)
%%For: (\346\265\205\344\272\225\351\207\214\345\245\210)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(\344\275\277\347\224\250\345\233\263)def
/Creator(PowerPoint: cgpdftops CUPS filter)def
/CreationDate(Wednesday, January 10 2018 17:40:18 JST)def
/For(\346\265\205\344\272\225\351\207\214\345\245\210)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *BindEdge Left
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNAdvancedSmoothing None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNBrightness 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNCADMode False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorHalftone pattern3
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorMode color
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorSyncICC DefaultFile
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorantDensity 9
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNContrast 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNDuplex None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNDuplexFixMode False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGamma 1.4
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGradation High1
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGradationSmoothing Off
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGraphicsMode VectorMode
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNHalftone pattern3
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNHardDisk False
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNImageCompression None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNImageSpecialProcess None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotAMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotBMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotCMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotDMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotManMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNJobExecMode print
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNKeepGray Standard
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNLastPagePrintMode None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNLineControl None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMatchingMethod Photographic
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMatchingMode Driver
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMonitorProfile sRGBv1.31(Canon)
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNOptionStaple False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNPrintOtherSide False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNProcessColorMode False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNRotatePrint False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNShiftStartPrintPosition False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSpecialFineLineProcess False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSrcOption None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNStaple False
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTonerSaving False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTypeWing True
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNUseColorantDensity None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNXColorAdjustment 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNYColorAdjustment 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Collate True
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *InputSlot Auto
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize A4
<</PageSize[595 842]/ImagingBBox null/MarginMode 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Resolution 600
<</HWResolution[600 600]>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *StapleLocation TopLeft
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 595 842
%%BeginPageSetup
595.0 0.0 translate 90 rotate
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: NUORCW+YuGothic-Regular
%!FontType1-1.0: NUORCW+YuGothic-Regular 1.0000.1.6200
14 dict begin/FontName /NUORCW+YuGothic-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid2 put
dup 34 /gid1 put
dup 35 /gid3 put
dup 36 /gid8 put
dup 37 /gid14 put
dup 38 /gid4 put
dup 39 /gid10 put
dup 40 /gid13 put
dup 41 /gid16 put
dup 42 /gid17 put
dup 43 /gid5 put
dup 44 /gid12 put
dup 45 /gid6 put
dup 46 /gid15 put
dup 47 /gid11 put
dup 48 /gid9 put
dup 49 /gid7 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -840 1 index div -619 2 index div 2378 3 index div 2642 5 -1 roll div]cvx def
/sfnts [<










00>] def
/CharStrings 18 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
/gid13 13 def
/gid14 14 def
/gid15 15 def
/gid16 16 def
/gid17 17 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-840 -619 2378 2642}def
/UniqueID 4360755 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91BC64A62485D7C863002D39D4194FF17CC8AA420E752C449BD1094F49C28F633408FFE145AFB3C9AC81918C41FFED6CF7CBD68FC08478A1D301F551E71FAE78D2029CC98539343CFE2A5F5BA856BE52D78A8B9A160A48B38408A0FAB3CB129499F36FAB62A74717A2A55CFF4E0AE5B8A50BF9E9948BE485CD0961410AB25543404ACF83A1CDE408652796A9800EE648B6B60FC879B785C845F3F8541D6A0087EE7DDB9C0FEB460DC393BDFE9EC1E553B14EF5996F1EDED49BFE71EA37F15984017439751CDD84D747FF77672564C52723505DC43CB293F37AA2BCF289FD011DD21E50A2D6FE414809A3E676379BDCD25D8989DBA8A91AC04209EB61B8FC2D6B7986400A14FA7FCC2175B843453662C62CE0B60C75EEB699A411432CE73ABE8204E436AA23A0B8B41C234A683C7B450746245BBFC2C58CB3468CF8717F43E40F4AB0B729CCBAA8956886DDB628216C0A2B52A33F1350406958B83166F4B26C34F4228A221D433F6AB4EA4D2F52FE943DBB07AEF7B3FBD73D7428B203CBCB24E3DDF6B19462F12254168929B94CF52C05C0768E17ED4F9E4A8C844791BE0EF689B4DEC184D6D5146306E77A6148520E2E47421DE5A1941084F9D308EDC2F9F9AA3232926DF53CD4E8FC1AB07A409046156C256CA0A92B2C02E883C34FE7DF064ED903E97C86632D974262FBE5E0E5FBA39107E876F694FA6E6A7F34680D92CB7C9BCA048CE0641EE880396DAFB5252D75DDAE71ACA1603CFAC2FE0CC6E0906FE219
B6CBE0D1301831D10859904B39398C7F0DDFC0B3E1F7D43B513BA2D8AEADEDEA808BBB7198A9D1ADEE1D1F811C00A41DA546C1FD20F4E20FBC6C02850279780A443016191DFA79C43C490BA84249EC331FB14554662948D3FADFB1766BA608B674C85BA2B3628E0E744300F7F8140A86E145D1F394BE4F13E06331D46F4EDCC27F7E787F663911B1B95C24EFB1DD0A2F093909643F068F8E5CA9C33A5BE3A400816185B6510B35866080777B4F5153BF2990C84FA5B9DFFEF7C79474229D8C7942D7EAECA58FE40C13BA76B9DE7C025318CC8352CBF5A98311B0735A6475F66EC98ED6E7BABF6FF07CDCEA1CAC338F2C847D40DC242527E57B65725EA4AF24F235EBA415BF84C6851D09BD18385F005A214D25DFA6FB843C1F89C9B149F79350DDD5750A0E41573C22A21331A50D753E94EEE3D913134EC15E62AF493950A0F7DB68E969897FFFF4C800E8DDD6E5835FDAEBFB786CA00CB7CDA68873D96331291ED625667F88FA82A801F1D891CFE15653D3D17F2D44DFEDD82AE337B8A3296E2268094132F358D8B8590E787F8B68851B5EC2BAA0E2515D66EDF8C817B434148125B0A18664D25B4D8B9FF359580537CF268B070E58DD5C9DAC0CC534B48E8F4A125E5252E2B4A8EAF0E3DA1FBE928CC5C2FA334012347DC2CBE0F756DFDE6A6DA8918A12BC3EBAEA4F7D1866F9B050EBD13AC2AF21C419D884FC000F3AE9F1FAF29502A745872D5632C6516C7B0C31A4D7C91014FD296C6B629D5B6BA91AEC87F38A72282577733BC24751D46A4BA4501B6CAB44ED48D23105363B1865CB52C961BD67023BEE6A81673AE8089EC4C90BBC6740DDA190C410FACCB5E8FF087872D6EBC1D8DB9E73EBC14FB3DBD4D2085F29888C11584F84BC1C15561EDC2C58A99BF7CC1C388369614EB768B900931FE7434D6CF513E4FFADEC31658C271BCC3CA10A8B5E43F7A929B4410D40C62C10E1744EF7D7C795C4E1F1CDD7591A70B76E59C3BD6D563E4B57A233DCBB7AC7C93F080319357D1DC8FCA4A422A04D7ECB4008354320C19136BEEDAA6A5604497963178B1B38721A8939C5CF5B800A1024FD13433B2DF0D77E0AE172D576463E385675E463A317EAAC92BDDDE33EC5C71FAF099684AE20A5132F6A32EEE1BB2EFBFD8F0DA17884CA643CA7FAACD0023996E0519C3E2282ABF3B51D62FBCA6B4FBD7F8D931656CC230DCF8DA665866B7A41C381EF8CE469E528573A8738D48EFB1569D42D5E45D1652826B12D1CE032EBCA37B84FF736EAA64DA6F657E05D1412554D667F376CE05AC1BD9D03C2E6C7CF2A9BA0E8331BA1A5E8E67366F00D666D45F79C44995BDBC642F1CABFDE4D83092ED35C48FF5A96E0858A4B9342DBC1C138ECA13CAF0372D5EA9553CC87BB1F2C7F35A844D3A5FC8C91156FDA8098B35300A5D3BF66905755DFCAACA2F44A5384BF
D1B051194CFD505502D6E4210623604FB564CA68B8EA7BA032EA8FEC1B247FB908DB2DD95FFA84B5B839699008C61E08093DA2F9984F217AB6AD0E69F6EF187D8686E09F68B732BDBE7435AF311A9F5DB17D963F43C4AFBE812E111DAF7320AD975A9DE3A69671E75701B1B13D1448CB525D0AFA7172ADCA8927F4F3BE5A3EE1428E3612E3B32BF1EB5988119C430CE8521C4325ED71A633DC6EFB7CEC95EFE1E139CCFD07E8E2D780F160AE2B432169A8A9E4DBDF64659F117063B7CB4E48918D65DEA82EEF07653136E6676CFB56FAD25A8E42AAFA18205D66F3CD06DC1225CAF75EF2188C9D383D89C620C6C4A5B4F7AB5E2BD09D0A031623FB161B4D020ED08F7C336E1577EA417B7EA006DF6F96B3F7B55F5777AAD74EB3AAFE15F30948DF8942255BAAFAB82DBE0BF312F398EAED48F476487E51372BA1EDB4D99E81F096AD958C2C0ECA27A3B8FD64B2FBF339948A2C9EAC8D270574B7FDDC47E2F516539F5979524AEF149C4A2AE8FB16F289743AA4BBFB3B0A76A1A159985D9B2474FCFC6A3AF217AEB03861695CC09E034D6672D7048CB3AD28FA361FB70970DF2546B1AC59912C616D7128FB72A2D62C1757388DD79F69370BD3756AEBAA03C37B1E6F104AC45CF9D58B749B99F16CC6F40C910CC393D26982928892BF8318BD8EFCF1D6E09E0352F6B209EAD48B257812B2C0B958C0F2EB8D237B30E3583A169BD74E0FDA85E76840007193B3913F96C9FDC72A5C68EA1FABA3194D0C81302BF8D2FF9305FC9B04A3F5CD72053D953EFD96B9B7C15DC1404F85E4A96E5C418CADA258EA566F8C484B8B449BB3372AFFBAB8FEE8927FFA34BEE07B7302083E964EA8A6C466C8A67614BD6CABD647CE4728FF1E6D038E29DDD46FCDE6622148D796C0E2DD0B0017C59EE93572BA5600CD303FB2C752643CD0D2FA30A48DEB9FA95AD1EDF0AB24E3D74B106BACB3A14596FA80865261FFF20C4C290643BB64FBE0FB0A803CE861B01F3C1488038903DA40DFCD569FAFEA4DE68CA708B219455A5F0BEDFA91260E0E593C610E586DD05BBC6D1ECAD8258117037CBD909C33833F0470FA30D1269493106DC9A1056283FF9B579598706D820E5D689112E23AAC848AF8055E38845103AAD72E941EAB09C2BBC8CD24251327BD85C778EBB19F1BD6A95CFAAFB684963416ABC55E8588EBC93A464CE20195E8FE3BFF796AF4C7AEB02A17D19C8ACEBD711C0C5D79747BC33116D0CE8E5E80B0DB06C29766E753DF66E6DFC3676F493459E155E604BBAD7E1FFFFC12C691DC7E452306F94C7D0DD4B0CACE7498BFD9F678564D888C27E3D01697EB9BD1A2F89027841CE31A999C33535A1DA0B1030513E7D4919C4174FAFB531D48669F542B6AEDD712861A9A9D13A654182304F0502D5DF7398BC71AF2E63D3CE4C407DE8C21DACA13FC1C2256D5AB15CB

8A81A8B1AF57986744664AC17A8B0EBD50CE303E874A2CE536818B576C79A966466F256ABD57EEED60B47C25B346EAE4C2FFB87B7B49F1D2F46C4BB7846DFC0C0ABE47801EB4ADAB47EDF373D307171BD52F887FBE2E149F0A8AF58088A34209F5EC01FDBB13461851C0C7F32F4FCF2351F171EC94A73721C5A80DDA225902981A821A9639F897E102EF9E095E0B23AE0FB9F89AC14846C82AFFE7CDA108F8F1B36A33912D4387FE7879EDBE4BBBF159BA82D12CDCA87FB97F0E9F6A6C0C0647D82621C2704C9ACC134E872814D78A8CB3D34DCAC64F3A5BA17101826E36C837A43D6282CDCF5F08D629C2F8D92EDA6C0E9C3DA9A2378B7DDC3C16751F5EB83D125016BF57D72A386D2BE4631E2593CAFB91FC113095C91E76B06B9AA95B380A753B13253F841D26FE438D5F3858DD5F58FEC3BFA24FD1718D1B219E9E28A13A7C48F9CF9847BC96352BA18E09183AA4BAA1CF38EC2E753B3ECC6A2CD8D2DD41D950BA46DEAD6BC3BD0879DC8843127C17336AF076CCF5C88CE003A026C39A7C6A5F205C89638DD5B418791671DA954BEAAA7A961DAE9D73A15D914091298E1F1EECD2EE78A4D8B6A5A3657C28932E51113D4D93B102C1D2E307C326F101F5779B1EE82B584337BAD5DB7485A662EAED4654712113EC3F2B6C14381312E62996C82FB914813CEF74B74B7E3EE7F489CA4174F7BACE4A4076AD570D0253E8B5D5B3385D2B62EB0685E17EAB414918C4D06995B5DDA5D999B8B74EAE728B8BAF775080A64837317A4D2007C5DA86D623612BAB45F84DD7147D56D91534673B0E3316F00C3D6742D98F5A7204FADAA51D2AD1FE9B5C35A59F38E79C12F25208786CEBFB211E458602D96F61EF09AFC77466293449BD8BA16976871C8269DECEC66332BDDEEC6F58DFA273418A2B43A21481C86CE3308ADFE40EBFCA9DDBF53FDF3973634EDC84C3AB048D7D058C9AD535AE348D37806A79F6315947B2AF28BD51AD489B481F045AA2F3D2D6E8E340A94E86DCFD04CD3712117AE0AC143FBFED0FDD4AF554DCDEA97E022821F964C920FA99EC003C28C6C7C1539C21C86BACDAB278540213D13A617AADBD2423F4D5A5E89A79F129445A6B4DD32B8450D7FE8B947C7F4038912906A7E99F703CADB230DCBA17DD43A6B1860602F5B0BE7B7E26CD8B992EAD5EDEB9F9BB954434F04423C24910979BC1DA2C4A3FE11AD932F10917690515A7FA8EE4FBE796279502FEF6388B66722D33251A9B27CD7239AC9D65EB050F9A0C0EFAEF79748E4460A9EEBD57607FECBE19FC192D48CBCC4B8D5B0E1C22BE3C6BB70F89FB923ED120DEE0D45305EF7A20CE181CCC5361C3CBC18F2908CC8582AD797F9490AAF64D33CBE6CD06FB321A78DE4D4EB9EC60D6A6A0D513EABF719E4834460C5B7927836FD057BF3BC9BEFF9ECD80E1DD4ED110712C688D800A
D00B5B9DB5D49E4EFF10AA5FD8B146
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/NUORCW+YuGothic-Regular cguidfix
/F1.1/NUORCW+YuGothic-Regular renmfont
%RBIBeginFontSubset: OSNNUK+HGSoeiKakugothicUB
%!FontType1-1.0: OSNNUK+HGSoeiKakugothicUB 1.0000.5.0000
14 dict begin/FontName /OSNNUK+HGSoeiKakugothicUB def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid3 put
dup 34 /gid4 put
dup 35 /gid6 put
dup 36 /gid5 put
dup 37 /gid1 put
dup 38 /gid2 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[256 0 1 index div -35 2 index div 255 3 index div 220 5 -1 roll div]cvx def
/sfnts [<

18070E0F0E130B0B0B0B131111130A93131809080C1939180D0D0C0C151F6D130D060607091C1B25251C1C090808091700010009FFF8007100C50007000037353315231523350968261BA22323AAAA00000100000005000050D7AE8C5F0F3CF5000B010000000000C66426CD00000000C7AC3AC80000FFDD00FF00DC0000001C00020000000000000001000000DCFFDC000001000000FFFA00FF000100000000000000000000000000000007010000640080000000800008008000060080000600800006008000090000000C000C00180030006600A200B200010000000700FF001800000000000100000000001F00000400005400000000004BB8004051584BB800115158B801FF85B0008D1BB801FF85B0018D591BB00085594BB801005358B001B0018E59B23534002BB23231002BB22F2E002BB22C2B002BB22928002BB22625002BB22322002BB2201F002BB21D1C002BBA001E001D001C4523456044BA00210020001F4523456044BA0024002300224523456044BA0027002600254523456044BA002A002900284523456044BA002D002C002B4523456044BA0030002F002E4523456044BA0033003200314523456044BA003600350034452345604400
00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00390625 0 0 0.00390625 0 0 ] def
/FontBBox{0 -35 255 220}def
/UniqueID 4503436 def
currentdict currentfile eexec

0E0B596D088245D07228480A688FB3D6560B3E341A4D0912D57626797AC14CB8A1DCEBC102A11276276DB3FF4055E014E3CBB21792BD0D0819EDBA10A9B50175D957D35406749F000F030B32068C85B2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/OSNNUK+HGSoeiKakugothicUB cguidfix
/F2.1/OSNNUK+HGSoeiKakugothicUB renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
14 68.999992 814 458 rc
14 68.999992 m
828 68.999992 l
828 527 l
14 527 l
h
f
0 0 0 sc
0.33333331 0 0 0.3334243 20.105 335.9209 cm
/F1.1[ 92 0 0 92 0 0]sf
0 0 m
(!)s
0.33333331 0 0 0.3334243 40.226528 335.9209 cm
0 0 m
(")s
1 0 0 sc
0.33333331 0 0 0.3334243 48.910561 335.9209 cm
/F2.1[ 92 0 0 92 0 0]sf
0 0 m
(!"#$$"#!#"%%%%%%!"#$$"#!)[ 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 0.000000 ] xS
0.33333331 0 0 0.3334243 414.91061 335.9209 cm
0 0 m
(&)s
0.33333331 0 0 0.3334243 430.16061 335.9209 cm
0 0 m
(#"%%%%%)[ 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 0.000000 ] xS
0.33333331 0 0 0.3334243 567.41058 335.9209 cm
0 0 m
($"#!)[ 45.751600 45.751600 45.751600 0.000000 ] xS
0.33333331 0 0 0.3334243 628.41058 335.9209 cm
0 0 m
(&)s
0.33333331 0 0 0.3334243 643.66058 335.9209 cm
0 0 m
(#)s
0 0 0 sc
0.33333331 0 0 0.3334243 20.105 299.2442 cm
/F1.1[ 92 0 0 92 0 0]sf
0 0 m
(#)s
0.33333331 0 0 0.3334243 42.450489 299.2442 cm
0 0 m
(")s
1 0 0 sc
0.33333331 0 0 0.3334243 51.134521 299.2442 cm
/F2.1[ 92 0 0 92 0 0]sf
0 0 m
(!$"#!"#%%%%%%%%%)[ 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 45.751600 0.000000 ] xS
0.33333331 0 0 0.3334243 295.13449 299.2442 cm
0 0 m
(!)s
0.33333331 0 0 0.3334243 310.38449 299.2442 cm
0 0 m
(&&&)[ 45.751600 45.751600 0.000000 ] xS
0.33333331 0 0 0.3334243 356.13449 299.2442 cm
0 0 m
($"#!"#)[ 45.751600 45.751600 45.751600 45.751600 45.751600 0.000000 ] xS
0.33333331 0 0 0.3334243 447.63461 299.2442 cm
0 0 m
(&)s
0.33333331 0 0 0.3334243 569.63458 299.2442 cm
0 0 m
($"#!"#)[ 45.751600 45.751600 45.751600 45.751600 45.751600 0.000000 ] xS
0 0 0 sc
CM
229.5829 335.07089 m
247.19141 335.07089 l
247.19141 341.53101 l
260.10791 328.6109 l
247.19141 315.69089 l
247.19141 322.15091 l
229.5829 322.15091 l
h
f
12700 w
8 M
0.00006677 0 0 -0.00006678 229.5829 341.53101 cm
0 96731 m
263738 96731 l
263738 0 l
457200 193462 l
263738 386924 l
263738 290193 l
0 290193 l
h
S
0.33333331 0 0 0.3334243 266.21289 281.82901 cm
/F1.1[ 46 0 0 46 0 0]sf
0 0 m
($)s
0.33333331 0 0 0.3334243 281.46289 281.82901 cm
0 0 m
(%)s
0.33333331 0 0 0.3334243 296.71289 281.82901 cm
0 0 m
(&)s
0.33333331 0 0 0.3334243 311.96289 281.82901 cm
0 0 m
(')s
0.33333331 0 0 0.3334243 327.21289 281.82901 cm
0 0 m
(\()s
0.33333331 0 0 0.3334243 342.46289 281.82901 cm
0 0 m
(\))s
0.33333331 0 0 0.3334243 357.71289 281.82901 cm
0 0 m
(*)s
0.33333331 0 0 0.3334243 372.96289 281.82901 cm
0 0 m
(+)s
0.33333331 0 0 0.3334243 388.21289 281.82901 cm
0 0 m
(,)s
0.33333331 0 0 0.3334243 403.46289 281.82901 cm
0 0 m
(-)s
0.33333331 0 0 0.3334243 418.71289 281.82901 cm
0 0 m
(.)s
0.33333331 0 0 0.3334243 433.96289 281.82901 cm
0 0 m
(/)s
0.33333331 0 0 0.3334243 449.21289 281.82901 cm
0 0 m
(.)s
0.33333331 0 0 0.3334243 464.46289 281.82901 cm
0 0 m
(0)s
0.33333331 0 0 0.3334243 516.24371 281.53531 cm
0 0 m
(%)s
0.33333331 0 0 0.3334243 531.49371 281.53531 cm
0 0 m
(&)s
0.33333331 0 0 0.3334243 546.74371 281.53531 cm
0 0 m
(1)s
0.33333331 0 0 0.3334243 561.99371 281.53531 cm
0 0 m
(\()s
0.33333331 0 0 0.3334243 577.24371 281.53531 cm
0 0 m
(\))s
0.33333331 0 0 0.3334243 592.49371 281.53531 cm
0 0 m
(*)s
0.33333331 0 0 0.3334243 607.74371 281.53531 cm
0 0 m
(+)s
0.33333331 0 0 0.3334243 622.99371 281.53531 cm
0 0 m
(,)s
0.33333331 0 0 0.3334243 638.24371 281.53531 cm
0 0 m
(-)s
0.33333331 0 0 0.3334243 653.49371 281.53531 cm
0 0 m
(.)s
0.33333331 0 0 0.3334243 668.74371 281.53531 cm
0 0 m
(/)s
0.33333331 0 0 0.3334243 683.99371 281.53531 cm
0 0 m
(.)s
0.33333331 0 0 0.3334243 699.24371 281.53531 cm
0 0 m
(0)s
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 595 842
%%EOF

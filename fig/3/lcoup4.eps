%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 541 423
%%HiResBoundingBox: 0 0 540.5 422.5
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G1114) Quartz PS Context)
%%Title: (\344\275\277\347\224\250\345\233\263)
%%Creator: (PowerPoint: cgpdftops CUPS filter)
%%CreationDate: (Thursday, January 18 2018 11:18:11 JST)
%%For: (\346\265\205\344\272\225\351\207\214\345\245\210)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%EndComments
% EPSF created by ps2eps 1.68
%%BeginProlog
-144 509 translate
-90 rotate
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
userdict/dscInfo 5 dict dup begin
/Title(\344\275\277\347\224\250\345\233\263)def
/Creator(PowerPoint: cgpdftops CUPS filter)def
/CreationDate(Thursday, January 18 2018 11:18:11 JST)def
/For(\346\265\205\344\272\225\351\207\214\345\245\210)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 
% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
% languagelevel2 ONLY code goes here
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd
/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd
/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy
	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd
/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if
	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict
	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
% end of language level 2 ONLY code
{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *BindEdge Left
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNAdvancedSmoothing None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNBrightness 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNCADMode False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorHalftone pattern3
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorMode color
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorSyncICC DefaultFile
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorantDensity 9
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNContrast 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNDuplex None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNDuplexFixMode False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGamma 1.4
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGradation High1
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGradationSmoothing Off
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGraphicsMode VectorMode
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNHalftone pattern3
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNHardDisk False
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNImageCompression None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNImageSpecialProcess None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotAMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotBMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotCMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotDMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotManMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNJobExecMode print
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNKeepGray Standard
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNLastPagePrintMode None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNLineControl None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMatchingMethod Photographic
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMatchingMode Driver
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMonitorProfile sRGBv1.31(Canon)
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNOptionStaple False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNPrintOtherSide False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNProcessColorMode False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNRotatePrint False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNShiftStartPrintPosition False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSpecialFineLineProcess False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSrcOption None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNStaple False
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTonerSaving False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTypeWing True
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNUseColorantDensity None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNXColorAdjustment 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNYColorAdjustment 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Collate True
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *InputSlot Auto
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize A4
<</PageSize[595 842]/ImagingBBox null/MarginMode 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Resolution 600
<</HWResolution[600 600]>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *StapleLocation TopLeft
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 595 842
%%BeginPageSetup
595.0 0.0 translate 90 rotate
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: QCDZNH+YuGothic-Regular
%!FontType1-1.0: QCDZNH+YuGothic-Regular 1.0000.1.6200
14 dict begin/FontName /QCDZNH+YuGothic-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid10 put
dup 34 /gid12 put
dup 35 /gid8 put
dup 36 /gid4 put
dup 37 /gid1 put
dup 38 /gid2 put
dup 39 /gid3 put
dup 40 /gid9 put
dup 41 /gid5 put
dup 42 /gid6 put
dup 43 /gid11 put
dup 44 /gid7 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -840 1 index div -619 2 index div 2378 3 index div 2642 5 -1 roll div]cvx def
/sfnts [<








240D271B6262B3013C01210E0EFEDFFE40135F59B4130608121125D55C511038E10E0EE1012BEA100209171B13AF7D110103050F201F73485C18040405050F5E604C151C09F804080704060E02092217023730FB816A7903131D14060506706906121D0F050506A4190605060517FE4CFEDBFE8D8D7F3F568A2805090B0B0C191A413E635EA88A10108A688F0E03368078012C018F04CB7548404014241808505C5378FEBE0E0E013EEA8508141F1476CC040E3A0E04C91A0D011D1A160C1D1E1D141919240D081217161BD3040E3A0E04FE0CDC887F5E0B1715165C8273B9040E3A0E04040E030618464E2C040C02021C439E5855030602050519221C1333598D07100D070B010402060406679F036D6BB00403060E160E0AB1690704060C140AF9E61E2A1B0404011B443F93606F210A120E232F232D486A020D040E440E04040EBFFE5E963D3700010089FFA6078D060200280035401F1F05251B1720190103197B0C016C0C015D0C014E0C01042B0C3B0C020C0805002F33335D5F5D5D5D5D2F5F5D3333331239303117241312132107223535343317333732151514171201060706232227240302030203020506232227268901ACE3C20DFED5BA0F0FBABDBC10157002C320190F080612FEA0C0AD3C2BF2CDFECA140607131B12D901AA016B01C8040E460E0404101D5390FCB9FE4B1029170DEF01420122017FFE5EFEA9FEDFB90B15230000020064FF87078B060E00410046006640410042140A420A0E3E7C330133160F49331A0E49331E0C0D4833220B4933164444322E7B29016C290129160E494D29013E290104291E0B49294F307F3002301D060E002F33332F5D332B5F5D5D2B5D5D3333332F33332B2B2B2B5D33123939113311333031011605060706232227242706050623222726272437260323020702070623222726273613121103343305212532151514232521112132373633321716151407060702073613211204D3FD01BB1F120F080610FE5CFCE9FE5A1105090E121E01ACF8F37BC90A2B3CCF0F0405131827D74237040E0125031001230F0FFEDDFC1D03CD1E0D0C08111E2110121BA8FCCE84FD5A79013DD4821B221D068DD8D794061D22157DE3FB0180FECAC8FEE3FA1213180EDD01340104017F01A40E04040E460E04FE5C06061F210E0C0A0C3CFE907FD90160FE9C0001008FFF9F06CE069C0043005F403B7B2D016C2D014D2D5D2D023E2D012D1E0B492D2308197B19016C19015D1901191A0D493E1901042B1901190134233423340D3E3A3C110F500D010D002F5D33332F33331239392F2F1133335D5F5D2B5D5D5D113311332B5D5D5D5D30310121052235353433052136353427161716151407061514072125321506150203060706232227262726272627163332373637121121020706070607062322272627


00>] def
/CharStrings 13 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-840 -619 2378 2642}def
/UniqueID 4360755 def
currentdict currentfile eexec


12B91D4501AFE6277351692EF6B9F36C7D8E3246295F54407D8688815F8ADE8DE777A5434D4F25ADD23FA57E5B53AECF04B3DF94B6FD11062FC9D4F0BF8CEABF365BE0CE80623292C61579D93D83D8085F87A1FF0964E0E00DF3AE4698C424590F8FF490473661BB17A827727FE4811E50451EFA58F64866461EFFDCCE90B7EFFBF655A219EA27D181A09313CE2FCFE743F4A5CD29830E6A40C2032D0CACED521F15F5CE57ACDC120714465782F290DB8017EC04760C63A130F0AA7AF2CF3F0A39E6ED9D1CDB2C90C36DE52E092BCAA3194837875C4EBD659A2DD218EF447E7651AE21A92FD2910EBBE11E5CE91625F458057E9D5F6EE0A8F60AC8693E1A11DFFF3E77B6B1CBD23C0BDC80882C6899A8292C1F916B6EE6DAFBCF701192392117CDBD0DA1AB6CEA9E6B0EDE90773A062DE6F481240D9383B92521D377AE9ABCDD9BF9E4BCE5D4DAD1742CFB522FBDABEEB0496337EE7710D19A396F9A7DB0138CB24EAECBC0844953CD2764C15D63528EE379835F28ED4534D477D06EF31CC88B12B025419CD1B1848E9CD092CE9A496A8BF8A40E267978C2B22450CED121F29ADC5018A3ADE72C0A7271E905EE49FDB2AF5113D8871C7D6D52E1B4C78A8C35DD85778AD8F4CB213413D21199702E1268425BA1A745EC0FD8269B8363D2451880C55C6F005D6DF22A30FCE9A84BFAD7ED3429AFF6E2CFC75A815A13C2092273F1DBC3FC77F0113F537D7E3989976A6D67F907E854AB3FD7ECA79B797208B79E6E0F32E9451DE2148E617B2B6D168AFA48DFA583A4B37B2BA1A15988DD85F7A21C53DF397363E8614D2FF21392A3629D9ACC8B152D68230E9FCB27BBBEB26D3CFC7DAAECFEB755CB610EE9B070E843E0D93C7DA30CB7CE7ED7F05993FEB2F45B9530587DE8FB496CB1BA75628C2E13E5CD58E0F2F2346DC5DB34FC76518462551554E2AC2B6663567BCC29CF0FABA695F1390D7D9DC64E748C48F31A0226552416EDFEDAB05FDA3DF7F2B5C217E56737932E5FEE9A5E5E59518F1328E59FED73E782BC89CF930DEAFC75921D2AB96DDA8DD2662511B1211659B37018DA86104F428734F1C925D8FDC0908BC96EB9EB4C3EA0B1C30DE866A57776727DA801460B49CFF0BBA962FD7549C692B2A73FABC33A438C5B90BA022444BD00952629226A08F916D984C2BF46952B206E51C7D2A310E5C14562E25F17C2FB850D09B72C6EF61A0C99E7788B80B70CA111E7C23C973260482AE7EE4626ED9F95EE3F9487178F7F15326C01490FFEB20C792FEB295CF05813689CB830AB1FE01842D6C3B19433D5058F24CCFB6933827F10EDD78A21A8A23EC1F73181C590F4DC1667BD435B5A85BE77B7B24F0598ABBF0ED1E8656175F005E8FB06B4EF17EABEF2AC65D444C402491C467F336B0ACDE4AFAE2861A49EDBFE9DCB406AB9838E72519220F93B1D

C7DC261752DBADAF3755E7F09E9ADB8A9589DCCC6917FC5434C90295D17301870507576AB77AD270C6AFDC5FA79D1B67CC737680B708630B190C496C9FC3AA234559AA089B17B852AA2F388EBB32239DD7F036379E3664120DE759AB096148BC0453F9022B199DB2FA77C347A4A38917288DA36F1A69975DB47CB7F8991FA6A95FDF3D22C895CE1BACC7893C4395B01B4F37BEC28EBE2B01140176485FB10419970CCC29A59E1E1A15614DBA859403C3A52BACE6B9D8DDA16C29830BF4420A33D1C3CB33FDB14CE6DFCE54807BEDB64377413A595AF64030983D987ACB4F6F81B33243096045325935C7E3C64F1B3AA2C477CF33CFF05E2F76D7B88C332DE4E69C25B7C9D3506ADFA6C679ED97E31F8C19E3210ACD039E98E19C2F58D5A6AAFE6EA9C52E236DBFB478C27D24A3A0AF465D3D04C5B09633435552E0BD93958FA285F84B3AEA71454EC4E1E9D0BCCFA5F501B3CA4053EC2332D01AB5C6C3C0F77CC147A0F4CC91CC43DEA89A5CB14D5CCA2C9F6CAE1B69D25D655A7A336B6CEF8BAD7AA256DE6FF6F7ADB1D26521EC58431FB674DF6E4884ECCC64FB7ECA2C2FD3E53F6FBC5F6CB59002C93BA46D428A24823524366F5C1ABBF195ADABD46265736733637CEEA18D35553317228F48FA67858F815044C0E3E4A2CE96E85EF36EBE8BB7CC3CC4754FF6F9212C48EA30DFE032483DC8CB50A35047DB29CC0EB450381BA27596E7C9540F73753A68FED666135F7716FBE261EAFFF4A6A2254791791BAA862E8C617B9438740234B69A3CEA214763769CB80F17E80A3B5E576A71367B9ACB8F3ED73E3C79178686FEDBD3F8138AD57EBAF6952080AE83B684BF189A1E93BE3A605646CB41122BDD5609A703FAE108A62C28E9C68AF0E793FF69670D108D027A37A1C1A424C44B5B78166D19EE42F6F69B2CF2E11C8EB2AD56E4AD8B97D96772F8015747F659DA722FB5258EBF254077E22C82908B0FDFDAF83196C3DE36C4B841C369EC4BD9E8A7E21F15A11494DE8559C37BDAE10803D7FE0072B257C6DFFC1F026CC0206F14F619EA823D220FEEA25336D03D3C6734F8A80908B5C6EE49F0938994D4A3AF4B9C60EA744FACD1F1C0189FAF6AECF4274BDD71B7090B6241AC53B0CA94D69DC2F142F2ED87626A86C72DD808A0AB258C91373F869D6661301675CCEC4BC74747512F2DA2FD4AE25C68D25B126CCC167486864C2275760090D0F8D6FD9B49C959FBC3A786F2B7B2E69E7EBA8A40762C24B9ADBE23
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/QCDZNH+YuGothic-Regular cguidfix
/F1.1/QCDZNH+YuGothic-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
14 68.999992 814 458 rc
14 68.999992 m
828 68.999992 l
828 527 l
14 527 l
h
f
12700 w
8 M
0 0 0 sc
0.00006677 0 0 -0.00006678 262.7114 491.2594 cm
0 0 m
4486275 0 l
4486275 2520000 l
0 2520000 l
h
S
0.33333331 0 0 0.3334243 195.2524 454.46991 cm
/F1.1[ 46 0 0 46 0 0]sf
0 0 m
(!)s
0.33333331 0 0 0.3334243 210.5024 454.46991 cm
0 0 m
(")s
0.33333331 0 0 0.3334243 598.58441 454.6438 cm
0 0 m
(#)s
0.33333331 0 0 0.3334243 613.83441 454.6438 cm
0 0 m
(")s
-0.00006677 0 0 0.00006678 361.11569 408.11591 cm
0 0 m
648612 639392 l
S
-0.00006677 0 0 -0.00006678 317.47079 450.81659 cm
0 0 m
2371112 1 l
S
-0.00006677 0 0 -0.00006678 360.7756 408.38019 cm
0 0 m
648612 626118 l
S
-0.00006677 0 0 -0.00006678 317.8111 366.56589 cm
0 0 m
2371112 1 l
S
-0.00006677 0 0 -0.00006678 317.47101 422.66391 cm
0 0 m
2371112 1 l
S
-0.00006677 0 0 0.00006678 361.11569 408.11591 cm
0 0 m
653706 217839 l
S
0.00006677 0 0 -0.00006678 361.11569 408.11591 cm
0 0 m
1541694 1 l
S
0.33333331 0 0 0.3334243 273.4024 404.14609 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 273.4024 385.8078 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 273.4024 367.46939 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 193.9691 403.8175 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 193.9691 385.4791 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 193.9691 367.14081 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 144.8181 441.50562 cm
0 0 m
(%)s
0.33333331 0 0 0.3334243 144.8181 413.34521 cm
0 0 m
(&)s
0.33333331 0 0 0.3334243 143.3197 357.23181 cm
0 0 m
(')s
0.33333331 0 0 0.3334243 676.15723 441.50562 cm
0 0 m
(%)s
0.33333331 0 0 0.3334243 673.93311 413.34521 cm
0 0 m
(&)s
0.00006677 0 0 0.00006678 464.04709 408.11591 cm
0 0 m
649301 639392 l
S
0.00006677 0 0 -0.00006678 507.3978 450.81659 cm
0 0 m
2373629 1 l
S
0.00006677 0 0 -0.00006678 464.3876 408.38019 cm
0 0 m
649301 626119 l
S
0.00006677 0 0 -0.00006678 507.39771 366.56589 cm
0 0 m
2373629 1 l
S
0.00006677 0 0 -0.00006678 507.73819 422.66391 cm
0 0 m
2373629 1 l
S
0.00006677 0 0 0.00006678 464.04709 408.11591 cm
0 0 m
654400 217839 l
S
0.33333331 0 0 0.3334243 674.96472 357.23181 cm
0 0 m
(')s
0.33333331 0 0 0.3334243 616.4342 404.1033 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 616.4342 385.76501 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 616.4342 367.42661 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 541.58679 404.14609 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 541.58679 385.8078 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 541.58679 367.46939 cm
0 0 m
($)s
0.00006677 0 0 -0.00006678 262.17419 255.0499 cm
0 0 m
4486275 0 l
4486275 2520000 l
0 2520000 l
h
S
-0.00006677 0 0 0.00006678 360.57849 171.90649 cm
0 0 m
648612 639392 l
S
-0.00006677 0 0 -0.00006678 316.93369 214.60719 cm
0 0 m
2371112 1 l
S
-0.00006677 0 0 -0.00006678 360.2384 172.1707 cm
0 0 m
648612 626118 l
S
-0.00006677 0 0 -0.00006678 317.2739 130.3564 cm
0 0 m
2371112 1 l
S
-0.00006677 0 0 -0.00006678 316.93381 186.4545 cm
0 0 m
2371112 1 l
S
-0.00006677 0 0 0.00006678 360.57849 171.90649 cm
0 0 m
653706 217839 l
S
0.00006677 0 0 -0.00006678 360.57849 171.90649 cm
0 0 m
2874786 1 l
S
0.33333331 0 0 0.3334243 271.9588 169.45821 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 271.9588 151.1198 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 271.9588 132.78149 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 192.57651 169.45821 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 192.57651 151.1198 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 192.57651 132.78149 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 144.2809 205.2316 cm
0 0 m
(%)s
0.33333331 0 0 0.3334243 143.3197 178.7086 cm
0 0 m
(&)s
0.33333331 0 0 0.3334243 144.28081 122.7623 cm
0 0 m
(')s
6350 w
0.00006677 0 0 -0.00006678 552.51392 255.0499 cm
0 0 m
1 2520000 l
S
-0.00006677 0 0 -0.00006678 561.70081 248.97839 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 238.41119 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 227.8438 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 217.3217 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 206.75439 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 196.1871 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 185.9335 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 175.3662 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 164.7989 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 154.11121 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 143.5439 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 132.97659 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 122.0292 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 111.4619 cm
0 0 m
137600 134641 l
S
-0.00006677 0 0 -0.00006678 561.70081 100.8946 cm
0 0 m
137600 134641 l
S
0.33333331 0 0 0.3334243 388.7605 496.03241 cm
0 0 m
(\()s
0.33333331 0 0 0.3334243 404.0105 496.03241 cm
0 0 m
(\))s
0.33333331 0 0 0.3334243 419.2605 496.03241 cm
0 0 m
(*)s
0.33333331 0 0 0.3334243 388.76041 265.62231 cm
0 0 m
(+)s
0.33333331 0 0 0.3334243 404.0105 265.62231 cm
0 0 m
(,)s
0.33333331 0 0 0.3334243 419.2605 265.62231 cm
0 0 m
(*)s
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 595 842
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF

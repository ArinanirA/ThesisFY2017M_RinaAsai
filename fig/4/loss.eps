%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 432 121
%%HiResBoundingBox: 0 0 432 120.5
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G1212) Quartz PS Context)
%%Title: (\344\275\277\347\224\250\345\233\263)
%%Creator: (PowerPoint: cgpdftops CUPS filter)
%%CreationDate: (Tuesday, February 06 2018 08:46:47 JST)
%%For: (\346\265\205\344\272\225\351\207\214\345\245\210)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%EndComments
% EPSF created by ps2eps 1.68
%%BeginProlog
-166 348 translate
-90 rotate
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
userdict/dscInfo 5 dict dup begin
/Title(\344\275\277\347\224\250\345\233\263)def
/Creator(PowerPoint: cgpdftops CUPS filter)def
/CreationDate(Tuesday, February 06 2018 08:46:47 JST)def
/For(\346\265\205\344\272\225\351\207\214\345\245\210)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 
% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
% languagelevel2 ONLY code goes here
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd
/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd
/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy
	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd
/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if
	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict
	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
% end of language level 2 ONLY code
{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *BindEdge Left
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNAdvancedSmoothing None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNBrightness 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNCADMode False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorHalftone pattern3
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorMode color
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorSyncICC DefaultFile
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorantDensity 9
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNContrast 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNDuplex None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNDuplexFixMode False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGamma 1.4
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGradation High1
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGradationSmoothing Off
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGraphicsMode VectorMode
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNHalftone pattern3
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNHardDisk False
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNImageCompression None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNImageSpecialProcess None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotAMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotBMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotCMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotDMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInSlotManMediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNJobExecMode print
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNKeepGray Standard
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNLastPagePrintMode None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNLineControl None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMatchingMethod Photographic
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMatchingMode Driver
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMonitorProfile sRGBv1.31(Canon)
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNOptionStaple False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNPrintOtherSide False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNProcessColorMode False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNRotatePrint False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNShiftStartPrintPosition False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSpecialFineLineProcess False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSrcOption None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNStaple False
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTonerSaving False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTypeWing True
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNUseColorantDensity None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNXColorAdjustment 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNYColorAdjustment 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Collate True
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *InputSlot Auto
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType PlainPaper
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize A4
<</PageSize[595 842]/ImagingBBox null/MarginMode 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Resolution 600
<</HWResolution[600 600]>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *StapleLocation TopLeft
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 595 842
%%BeginPageSetup
595.0 0.0 translate 90 rotate
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: AHJIIT+YuGothic-Regular
%!FontType1-1.0: AHJIIT+YuGothic-Regular 1.0000.1.6200
14 dict begin/FontName /AHJIIT+YuGothic-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid1 put
dup 34 /gid5 put
dup 35 /gid3 put
dup 36 /gid6 put
dup 37 /gid8 put
dup 38 /gid7 put
dup 39 /gid9 put
dup 40 /gid4 put
dup 41 /gid2 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -840 1 index div -619 2 index div 2378 3 index div 2642 5 -1 roll div]cvx def
/sfnts [<











00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-840 -619 2378 2642}def
/UniqueID 4360755 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B4F1C51BADFF3495C2924BE71970B75EDF2A199B50F98194813A33F2E140BD58F0EC50948C928BF2D844C07F47261BBAA05EF6B33CC8F61F24A67831D284D5A8DC3A9165A05B800CF4FCEBE38C4A36C8E41F215DBC0BD55122B3B9C60DA2990A53831BE5BC5B2A5766F52DC7FE718288AF492C84F533FA7A577F61A5F1334EACE1271D7733E82D7A9783FDC10488958CC2419ADB95367B2042E7DF6628C56AFD366532F0BAF4630C15898BD54C0FE9A0A0CD75C939A9B4229E2F06EBFD5EA1269FE5193F3A45AB96D970E75CAA190E40B3A0A7E7FD672C87E38E05CA101313B40505B15160EF5CA2CEBC249B4D0820706F0B360BF0488973830E64312EC62D45775EE3D736A25A8BBF95F58472F49F6CB1967920ED9CF8C445F33B4DE27EC39E454A5ECDD85F854743BA2FF5FA3F57733E9C3D8750CCD268C22EEE55CBF4EA0535EA7315F7FBFF8846B063D719285B24DD3BF325769495631AC19A5AED76E0238BFD7E7D9C44189709612E0D1F6A3A3B0907B972695CE982AFF7549DBBF993A736AD9F760BAD46F03DD0FE3825777BB3893BF90DFA4370EA962124853BED3A39283169D3D5EF9330F0BAB9B38B1B66F9E0B2E874D09A213B8D33758A5350743183C00B2E399DC6CBED4348D5C1946BC676BC9332B0A5262EAA59267371F10ED9A4D27B5132EF50CD4E6729C28E849BC7E855FD8DA81AF7D0615CAAB56185A1054280B35A18FD56EE32C389E5515940DFB5EA340F51AE5478CF6AD9A498825F99

302B204CAAB2B3F4C1B1145367BA6BF22D339E5BD72458DF8EDBEC23D8D1879A19D8E258CDF534126CB44D8DB73CE55938626679E44ED45DE3018F8C4EE1530F45EE8EBF94BFC890F8DFE014B3AB09C763C09BF321BBF08171F24180D7B2E6721BBE6D03FE6200FAAAD325FA1026693272906EE871970EB93EEF89B05754B61AA38CF4CE1761732EEF9CE193D06CD9D84DFC095C49F21374AA5C956264BC5E41C1348286DDFD761450166EC77626DD25FB2669BCA020A38B0D006751A1E2D0891C269C93E6211B5E4422E5C8AD77E9BAAC7411409FC5DB8EED2EDDBFB5AE6C461C96FCA39EEAE0CCB1F5641E7FA4BB26B39D7A5B071F568BCA6CDB4B722C4B439947B126CFE2872FC4A9E7AFCE1036D5159FE41696398FF1D4E49182F6BC6CC36DAD026A7DE5EF64186B197D0BB3826F107BA4209221CBC955FF8431715E912E151405867CD228CA0AB8559DB99E4E4626EA7E0787D811135141E82CBDC0B5EAD749284DE9C7A89952D188581DFF4149B71F3AB66EA8929E452541CF20A6BD780197C7B2F073A3C97A161CCA4E0349898A97675162A797D3AA554E0A21B8450D1095FAAFB3AFD2AF36E17BCA0F881984B2481CE16D6CFA00486C6119286A455B9FDB6BA60CF9A086E69399DC8438B8544F347F9BE5A3EFE18E5FD979790D48EEE7874F0E0A8C0E21F2209BA5B13FC79E873E89B06BC5CF7616D7544764353CA54A6239929D2B017F4787204EFBE262404623DA97FE7B162592E12E73024B9236FF7A6242081EB9A1F03239F254FC383CB060D0C87526AE6740B4B22F81C664E99114AA81588763CA7DD24BF6FD866F90C09EB20B5EBDA66B880AD9C00A66E91A5E777C06E960B29A452D59882F04EC4851B53172B73C9F918A26A355B55D527B21EF04E951648BB216FF9A728AD69C3F22A790794ED38D624EF1C2E167DB24D48873CF9E21297EACE50D422274D03D260D3FBBA45396F85C2D263C4EBC52A8829B1400F7F87B74120F029EFD89CBA74DBDBFE939E9BE1C7E5B49A9D7FEE9D5F3C904DB5CB3FFD5D9412B7E6321CFC0390E0763DC239824B7986D07EDAF9FFEA35D50D8B70F9B90D18B7C949AC1CAC5280556ECBBC48B403CE7C72C6ECCEE0528F373BE9109FDDE921D87FE184CA083FBA6FE3CC27F0032C137F4EBEDDA1370927CAFC9B0FBAF75B2ACF88394F8921E7C493A50B90799F93BA1BFFEDE23DEA9C0CDDB0BF79D5616DFF9DC74EA9D029DE8D13AC2448A8490A1067A86277132F06272E9D8CFCEF6D20DDB76C45D66EDBD58C82EDC00534918BF6A41F7CF5B02F8D90260DF2DAF246D28EA1E003CE908A9F26ECA30615ACF08DE24D3496375E2432075F79E8C8140F615DA417FA78A6A5BADCE89E8A092F35B316F4F79DF3619337F995971BF24422CF4DDE8CE7EF98374602919EF6E8ED1A127E7234E1EC5A32415

B344A5A901AB7997A3DB197DE3A2AB436974D0BEF855D46FF2C483DAE69CE33594A4D0428552BE2161EFF209C6D94D26A442C65852ECA0C9509CE8919F3CDDFB2EB7DAF97965EC90445216E3628D41E4A24F73184577D0DCDEAC0DB933BDDD19EEA9DAFE37482C7B83D8EF9B1743AB484ECB366DB830B48FED82A5F756729CF78C36A5C486D0001BBE63FF1959555A1748B5715404B5E4482DD82E86B25EA3351B80CA9FA83A664F11CDF7B8EF63A5A15B3F578593A7A272F76FFD220578218B351167FA6C35008A9281D1790DBE5A7524B4146362A4254789442C8F77B3F36AD3E2B15DE4542CAC1FE1209A2B92673FD1DB3A5BA0E40A9E3A0A76FE55C4DC0682560C300887915A021CC02961B4DCB7726AE1FB1663D290EB5DB6F9DCE5EB97B8953D6336226CB9C14E1B41D3D715ECCC10EB269CF265B240FDC6D017524CD81142B5428E02F08E4FA31082949714722703D371152B507641D98610C92370EB79F821C22AFA085A8AEA74908292AD7EE339A412135DE93B5537E14DE29A2AB371167AE83C756BA31BAE669CCDAA9265DE9EC0C9A08AB140F7443C65AEBD63881DBE288E79CF71087BD3FB902EC6A343D91ED945D5A97459197454C3A7F0E86D2FD34F1C62970C6870E218C176D0C78C02641BDE82FE663228A5DE08BD6594E11E96C57181E1E6979A0AF4C4D750832E5748010A0DC7A8D44CDDFC7F7C2BC5996E09C679D3232D9D97960142DFDFA6EC230D487C7A9CEEFA9E033B2D31D1F5386AF602F8EA6BBE6DF2D5DE1358EFAC8F0370742998FB9160DA8918B600DF149B7E1C5FAD67B2527C2879C6980FE46D76434E4144B1727015EA596CEC8AAB828B32F292494A4E0762925A450FD9BFFD043002BBB8132357FB00C8186BDA589978F43BB8D24FBD8C5487F8B3A627CA007D1F438E59B2D602D1C726450FEBC2E62F88CF0007C4AF9C31F4B4F8747E198E40A93D54203E7656F48F8737D235A9979CAEAEF9165A3F17E44F93379EF26E28C84C4EF433DAE3408FC5859592A6400D1CA89C38B74271141ECE7E28E1043D5880AA33ED9634A6579FC152201752836AA2060F272D7FBCB8CD0B143E243CACF312CF5E9D5F61E28C65924F560F4D7D390838191AF9ADE83DF693341DDC6BFF1C76E77F83428C44A627787EEA47AE9EAD9DB3DDE5ABC9FA8532F9205FF361890F6B6FCD29C9AC19FD04950CAF00D0BEF2510B875297734EAC53D7188118E4BE782A7CCC508E4614D7E17D4604A08F1E2F34DFEE5AA45D316088ABC87F9FCAD28DA362958A88F99D3D54AD937A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AHJIIT+YuGothic-Regular cguidfix
/F1.1/AHJIIT+YuGothic-Regular renmfont
%RBIBeginFontSubset: LWDXMS+CambriaMath
%!FontType1-1.0: LWDXMS+CambriaMath 1.0000.6.9000
14 dict begin/FontName /LWDXMS+CambriaMath def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid2 put
dup 34 /gid4 put
dup 35 /gid5 put
dup 36 /gid6 put
dup 37 /gid8 put
dup 38 /gid7 put
dup 39 /gid10 put
dup 40 /gid11 put
dup 41 /gid1 put
dup 42 /gid9 put
dup 43 /gid3 put
dup 44 /gid12 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -3020 1 index div -5046 2 index div 5873 3 index div 6383 5 -1 roll div]cvx def
/sfnts [<

002B000005222E0235343E0433321E0215140E0401141633323E0435342623220E04023C65A0703C224872A0D0826AA26C372045719ED2FE987376548C7054381D74755A9170513518163A70A46857C8C8B98E563F72A16450C3C8BD93590189918F4F85ADBBBC508E95548CB3BBB40000010042000004D00511002C000033373E05371323220E0407231321032335342E02272E032B01030E01151E031707C30D19241A1312120CCA8A212E262123291B6B4B0443516903060805070F172019A1CE0B09010A1A2C230E3D06090F1A2D4835038804111E344C350152FE9F39102929230B0E120A04FC702E411A141D140A023D00000100C5FFEA058D0511003800000136353426273721070E0307030E01151433323E0237133E01353426273721070E03070E05070E03232226353437014F172E3E0D01A90C21291D1911770B0CDE4F72503814830A0A303E1101930C161D1511070D1D1E1F1D1E0D1B5C87BA7AB9C22703F858302B26013F3C090E29544FFDF3335E31D02D5B885C02392A46182C25013F3C050A0F15122366798889853B7EB17133A69C729F0001009502070565028C00030000133521159504D00207858500000300950137058F035B00030007000800001335211501352115139504D0FB3004D02A02D68585FE618585011200000100B4FE3C032C05A5000D000001101217072400111000251706020161E1E718FEDBFEC8013901241BEAE101FAFEA2FE3A4D4D4D01FD016A016901FF4D4D4DFE4100010026FE3C029E05A5000D0000011002273704001110000527361201F1E0EB1B01240139FEC8FEDB18E7E101FA015201BF4D4D4DFE01FE97FE96FE034D4D4D01C60000000100000006E66638EF545C5F0F3CF5001B080000000000B9E6983D00000000D18D01E4F434EC4A16F118EF00000009000200000000000000010000079AFE390000175AF434FDA416F100010000000000000000000000000000000D054400BE046E00B204F6003904CC006903200042060C00400595008B04EA004205C900C505FA009505FA0095035200B40352002600000050007B00C50113014701A801E60228027B0288029F02C002E100010000000D00C0002D0097000600020010002F0086000009A411280003000100000000
00>] def
/CharStrings 13 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-3020 -5046 5873 6383}def
/UniqueID 4480348 def
currentdict currentfile eexec

0FDF58AB9E4B0F568894ED5E7AB82A509CB06A26EBA05EB6A879B75C8DBA1A8BBB89D8807604DD225D9552D8B67E209706A943CBFD732A4343215C075E20B7364470D285843F06A1184DF4DF3FC07EABACB140A071CA7F994E4A3BB95450A33919D624CCD1336F5A21BC718E9C9FA0DA0C44BF8BB31C9532B3B57862E3329CDF245B5AF1663A311C1D56E98F4F25CB77F9D0659E1E9B686E8DEE9C7EC53C7CDC6D1995A06B34B4D4A282D4A186250A7331BF56E045466E362839280EF0F8BB1CD95AC6F3726D2923923F7A686B1BF7D53EF92C25BCDC9291B9E9203E525BB7F0B33A8412E3BFB8930628E6D2DCE234E9A2ADA72ABBA5390963C050BC5F01446EF3730AEE59D9D7B5539C4FA29EA085379CACBA9AED75763D49A546DBEDA3E3C6E8DECB596E0F2B69CA5B80EF64A15F89F40E4C41882324949E6244EC9C6FF77C3E3857BB1195C8F15025A5F13D336DEBE31AD604B1FB22C2E1B46BA429FE01638DBFC800B72D80B9D9DE0644414261062FF15B70769CE9DB0E68331864D5644351E3D3FDEFF841E6DFE2244B6F9F07AE8B04E04EC6765E453BD1BC3316E3A7E341C9E8C3B7543ADB6379747A7730C0E108BE07444FC3484D049CC55603F250EA5AB3C5C550A2FA0E3CCCF34DEDB58A4FEBA05210224BC99568A016342A380B10297AE23B725A79BD2592683D28833EA0496F002B177E058D31088A7292075E956A1F398EAEBCBE212942A880FE6BA34A3EDF6D8E78311511E4DBD26E380CF2F527475D72E4E461A79A736B82F98EE3D116D6978C2492D1CE4D53E0F5ACE427E056AF98AF7D05EFFAFB5D98A1C629D2FDC6C5EA725ACFAF41825CEF17EC4AED2B4D0996DF5A22EB99338FC8564F3F9A0AAC4FBA26624E922EA9D93D2AACE08418BD152A01CCAA20058CE50EE6EEE296F6F244101D27E194F886ED7C67F61338E6AC45CBF1D46EEDC96696912A3B740964494AE831BB9D32C1B838056D326C442B9A8026181A833C81B0B42B913082C1910CF81BD74F47CADEF90678FE25A353F488D3C38B196D62C75267CDBFDEED34E484E0626BE9DDAAAE90FD383924C5073A201B63B7147FDCF15F5668E8A215A4E3367C291520F1FE74E227C480F244027E68A599A0BE0A6278DAEDF7FBCB09355663A9D96573D99CFA8D26F46C82E6BF3B5A2DD118387F9A6295875E947C2E0FAF1E3713A843982734837B7ED5DF9ACA1DA3B9C6C348878456FF0570D0EF44E4AEA1D3F387311A3276E6D4CDD52D7936AF240A3DE9FC71FCDF643DA3ADCC3CC97A4115F044D2A244D8D2B829E810A04610A0FBFE86EE05FA5089FC3F95F2B877EA238C80688094B49402FE15E02EBE24DA895B325470CD41385DEBCCB20909F4872629569FCF20D1E4BDA71B2DE1EFE94377740FB933A0AAB610CDCC236A55F9B09033F9232E49E2AC12F462CABDC5C52C
626E35CE5FAC40F327F30C2ADA976EF57E5D48D0DEFB8E36BCF6F0D09C44C6C8CFA3458EE105953F6502C85A073638AF6ECE065F929E2E5F38A6969B05B0EC22EE88BF2F3A31C6EE6A8061ACABBB5717F2CD6756BEE3B1B1042E72AA0776261D72BD964EE420E47C831056082D40ECA247E7416BA8FA99118AC2016A1A0BB61E21776394BD9BF8729EF94343968587DCDD0B47A2590DB71101095FAB5191A0CB103280E03AF05995513BE19074156F3A658FB485699871C8109042C1A2D39ED0C4D0CD5699EE8CA58CD722AACEFC9AA9E82DAE992CEEC623CD2510F585747046E3DC361A48A379F5AE8A55965C7A97BFE2A234EDC17D2B78678772D7A35578320EA4CC090C339E3F05709C92FE3DD08D6C64F931FC4C2BFA43BDDD0293CD57F3EB0A1E9E8D42E4CA4F7D868D61AFD5DD6C560B68B148CAEF0922B8A0CD691AF8C5A4B828CBB930DF08E7634B7FA747B232D73E3BC8EA1E0E033CA5F18B29E700725A6AD75E8547DD2793109D346178E603430C51E366BD3666A85FBA164408B1BC1F4741D490FF914A841367C99A9069F1AADBFF0C9C837AA464B97798CAA11D6E8D4EF4BCC861078626DE1BF1B1834CEC984E34A43D9169898CB8B6FA90C806B6D4BB3DC9E713FBA097002375437E1B2BE071A600D00523FC2552732E3DF9933EC2E9955DB9D3750024D6B663918477E55A83B7BE0E889DFA491D8D33989AB63E2627BB8D4FF3B3CB141E0FFF517B0E58CB168CDB07D854E6CE6394D78167026B050296EC985CCD96184BE4A4D542C67684C8D55BE8159D6053A701D5F412FBCD75B94840094D9B5FB104EF5323650115198C90219922F6FFE2C769BBEA4251F47741C9BBCD6F0DDB48537797267DB5B906179716E8009CA731E4959B6799A675E53CCC95E951E09A2C5FB72C796AF7BEAF4EA86AA27D7F31492E6C6DBD4112B99066D83D15FB6EFBCD57CCD587451A755088C5C5DC9C3F4477724D194208044E131DD7441C183258352023DBDEA7B6CFCE2C486A99C90087F19CB41FCFEFC62A7D1F48944A54B595A929B58D8BA72FF751E0ADE646D7B7B086A03FA3AC6CA999EFC1F22D8895C1D1F982D8B0298B1FCF1F29460B844F26C7004948D24BA562978F096002D780FD7C3B41BAA5D0274F952C9CCF8BB084BFB4808193EAEC829791D38C26123941D1D1760B7D4F05462FE871FB58E39842B6D22E2457E4011D8B12E0830B67CD4AABB2B7AF59FF6CC1823AA7915C331DE8E7F586CCC125E05E95300BB45F0638BF997E048BEE546DA29133711EA2A5D80DEA5B14DFE3397F9AAD0B74E7E6FEE89FE99C29CD2916400FEF7453B6C1698BEA8BDDF497F00FC8258491F4EF391A075FD159A6186C6BAA908698D1ADC2F3A087F4D617B4892484643D729F4FBB4F0BE6FF5F2F8CC723C81CDA3A3ED4803F62EBA8654590E4ADE3FF8C
4AD02B78F23E25D4FF2EC4C7FA95A9661D19C5642323ABB8FEC0B685BD7EB5A4F141EF970C941A962F1C5A066CD3E63D3A48DE3BE0D7ADE33B6655DE0BE76229269BBAA674AA125B35DFA52D91AE2597EA9D728F67CC6B2C4074BDA1826922BF2896C59D3524E0EF342663F49B1CE916A628B4076753B8462B89C33949A42691490ADBA5E050132705894291A91AE324D62D40D4975F5DB9B6D30F0202BD260D822D886F67A30171918B82641BE7F351226B07B753F56BDB5A0576EFC592F3DEC515A98C79DBDF3EB6993A06BD064ACE0CD31A99371E9006B7B310192A7FC885272E951FA14AC7ED537C69DE98A6F47A3DDFF4C8BD8FA1D5FC76394ED43D4D465B1688C8DBB221D36A487C4DA96A50A5C43CD3981C9A9B894BD3344E8E3FFC7694EE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/LWDXMS+CambriaMath cguidfix
/F2.1/LWDXMS+CambriaMath renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
14 68.999992 814 458 rc
14 68.999992 m
828 68.999992 l
828 527 l
14 527 l
h
f
307.97931 291.18881 m
454.4993 291.18881 l
454.4993 367.28726 l
307.97931 367.28726 l
h
f
12700 w
8 M
0 0 0 sc
0.00006677 0 0 -0.00006678 307.97931 367.2872 cm
0 0 m
2194560 0 l
2194560 1139483 l
0 1139483 l
h
S
0.33333331 0 0 0.3334243 340.5177 319.46451 cm
/F1.1[ 81 0 0 81 0 0]sf
0 0 m
(!)s
0.33333331 0 0 0.3334243 367.62881 319.46451 cm
0 0 m
(")s
0.33333331 0 0 0.3334243 394.7399 319.46451 cm
0 0 m
(#)s
CM
294.0119 322.1944 m
307.97931 329.23792 l
293.96561 336.18881 l
293.98111 331.52399 l
166.14771 331.10059 l
166.1631 326.43579 l
293.99649 326.85919 l
h
f
582.3559 322.66431 m
596.3233 329.70779 l
582.30951 336.6586 l
582.32501 331.9938 l
454.49161 331.5704 l
454.50699 326.90561 l
582.34039 327.32901 l
h
f
0.33333331 0 0 0.3334243 172.26041 349.05011 cm
/F1.1[ 46 0 0 46 0 0]sf
0 0 m
(!)s
0.33333331 0 0 0.3334243 187.51041 349.05011 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 202.76041 349.05011 cm
0 0 m
(%)s
0.33333331 0 0 0.3334243 218.01041 349.05011 cm
0 0 m
(&)s
0.33333331 0 0 0.3334243 233.26041 349.05011 cm
0 0 m
(')s
0.33333331 0 0 0.3334243 248.51041 349.05011 cm
0 0 m
(\()s
0.33333331 0 0 0.3334243 263.76041 349.05011 cm
0 0 m
(\))s
0.33333331 0 0 0.3334243 279.01041 349.05011 cm
/F2.1[ 46 0 0 46 0 0]sf
0 0 m
(!)s
0.33333331 0 0 0.3334243 286.79639 345.9357 cm
/F2.1[ 34 0 0 34 0 0]sf
0 0 m
("#)[ 13.025400 0.000000 ] xS
0.33333331 0 0 0.3334243 460.60779 343.88519 cm
/F1.1[ 46 0 0 46 0 0]sf
0 0 m
(!)s
0.33333331 0 0 0.3334243 475.85779 343.88519 cm
0 0 m
($)s
0.33333331 0 0 0.3334243 491.10779 343.88519 cm
0 0 m
(%)s
0.33333331 0 0 0.3334243 506.35779 343.88519 cm
0 0 m
(&)s
0.33333331 0 0 0.3334243 521.60779 343.88519 cm
0 0 m
(')s
0.33333331 0 0 0.3334243 536.85779 343.88519 cm
0 0 m
(\()s
0.33333331 0 0 0.3334243 552.10779 343.88519 cm
0 0 m
(\))s
0.33333331 0 0 0.3334243 567.35779 343.88519 cm
/F2.1[ 46 0 0 46 0 0]sf
0 0 m
(!)s
0.33333331 0 0 0.3334243 575.1438 340.77081 cm
/F2.1[ 34 0 0 34 0 0]sf
0 0 m
($%&)[ 23.191400 24.143400 0.000000 ] xS
0.33333331 0 0 0.3334243 286.57471 252.47881 cm
/F2.1[ 71 0 0 71 0 0]sf
0 0 m
(!)s
0.33333331 0 0 0.3334243 298.74509 247.6356 cm
/F2.1[ 52 0 0 52 0 0]sf
0 0 m
($%&)[ 36.218000 37.466000 0.000000 ] xS
0.33333331 0 0 0.3334243 342.0043 252.47881 cm
/F2.1[ 71 0 0 71 0 0]sf
0 0 m
(')s
0.33333331 0 0 0.3334243 366.2814 252.47881 cm
0 0 m
(!)s
0.33333331 0 0 0.3334243 378.45181 247.6356 cm
/F2.1[ 52 0 0 52 0 0]sf
0 0 m
("#)[ 20.332000 0.000000 ] xS
0.33333331 0 0 0.3334243 399.75089 252.47881 cm
/F2.1[ 71 0 0 71 0 0]sf
0 0 m
(\()s
0.33333331 0 0 0.3334243 409.59991 252.47881 cm
0 0 m
(\))s
0.33333331 0 0 0.3334243 428.00159 252.47881 cm
0 0 m
(*)s
0.33333331 0 0 0.3334243 450.95709 252.47881 cm
0 0 m
(+)s
0.33333331 0 0 0.3334243 465.86819 252.47881 cm
0 0 m
(,)s
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 595 842
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
